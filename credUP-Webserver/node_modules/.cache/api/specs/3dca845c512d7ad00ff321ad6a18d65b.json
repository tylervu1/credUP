{
  "openapi": "3.0.1",
  "info": {
    "version": "3.0.0",
    "title": "API Endpoints",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://{env}.checkbook.io/{version}",
      "description": "The Checkbook.io API server",
      "variables": {
        "env": {
          "enum": [
            "demo",
            "sandbox",
            "www"
          ],
          "default": "demo"
        },
        "version": {
          "enum": [
            "v2",
            "v3"
          ],
          "default": "v3"
        }
      }
    }
  ],
  "paths": {
    "/check/digital": {
      "post": {
        "summary": "Create a Digital Payment",
        "description": "Create a new Digital Payment",
        "operationId": "post-check-digital",
        "tags": [
          "Sending Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipient",
                  "name",
                  "amount"
                ],
                "properties": {
                  "recipient": {
                    "type": "string",
                    "description": "Email or text enabled phone number/id of recipient",
                    "default": "testing@checkbook.io"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of recipient",
                    "default": "Widgets Inc."
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Payment amount",
                    "default": 5
                  },
                  "number": {
                    "type": "string",
                    "description": "Payment number"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description/memo for payment",
                    "default": "Test Payment"
                  },
                  "account": {
                    "type": "string",
                    "description": "Debit account id for funds (if sender has multiple bank accounts)"
                  },
                  "attachment": {
                    "type": "string",
                    "description": "Base64 encoded PDF attachment for recipient"
                  },
                  "pin": {
                    "type": "object",
                    "description": "Sender designated password / PIN required before recipient deposit",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "Expected PIN (max length 15)",
                        "maxLength": 15
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the PIN (max length 64)",
                        "maxLength": 64
                      }
                    }
                  },
                  "remittance_advice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Id of the record",
                          "maxLength": 32
                        },
                        "amount": {
                          "type": "number",
                          "format": "float",
                          "description": "Amount of the record"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the record (yyyy-mm-dd)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the record (max length 64)",
                          "maxLength": 64
                        }
                      }
                    },
                    "description": "List of the remittance records (will only appear on the mailed payments)"
                  },
                  "deposit_options": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "PRINT",
                        "MAIL",
                        "BANK",
                        "CARD",
                        "VCC",
                        "RTP"
                      ],
                      "description": "Deposit options"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the new digital payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for check"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Check creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Check number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Check description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Check amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the check"
                    },
                    "image_uri": {
                      "type": "string",
                      "description": "URI where image of the check can be accessed"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id or physical address of the check recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id or physical address of the check sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PAID",
                        "IN_PROCESS",
                        "UNPAID",
                        "VOID",
                        "EXPIRED",
                        "PRINTED",
                        "MAILED",
                        "FAILED",
                        "REFUNDED"
                      ],
                      "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, VOID, EXPIRED, PRINTED, MAILED, FAILED, REFUNDED)"
                    },
                    "remittance_advice": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Id of the record",
                            "maxLength": 32
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "description": "Amount of the record"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the record (yyyy-mm-dd)"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the record (max length 64)",
                            "maxLength": 64
                          }
                        }
                      },
                      "description": "List of the remittance records (if specified)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "date": "2019-09-13 19:37:41",
                      "description": "Test Payment",
                      "id": "f71fbae77f1345689db646c5b029ddb3",
                      "image_uri": "https://checkbook-checks-dev.s3.amazonaws.com/fe44e0f3-352a-4553-ad31-44880863ed4c.png",
                      "name": "Widgets Inc.",
                      "number": 1001,
                      "recipient": "testing@checkbook.io",
                      "status": "IN_PROCESS"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check/physical": {
      "post": {
        "summary": "Create physical check",
        "description": "Create a new physical check",
        "operationId": "post-check-physical",
        "tags": [
          "Sending Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipient",
                  "name",
                  "amount"
                ],
                "properties": {
                  "recipient": {
                    "type": "object",
                    "description": "Physical address of recipient",
                    "required": [
                      "line_1",
                      "city",
                      "state",
                      "zip"
                    ],
                    "properties": {
                      "line_1": {
                        "type": "string",
                        "description": "Street line 1",
                        "default": "1234 N. 1st Street"
                      },
                      "line_2": {
                        "type": "string",
                        "description": "Street line 2",
                        "default": "n°56"
                      },
                      "city": {
                        "type": "string",
                        "description": "City",
                        "default": "San Francisco"
                      },
                      "state": {
                        "type": "string",
                        "description": "State",
                        "default": "CA"
                      },
                      "zip": {
                        "type": "string",
                        "description": "Zip/postal code",
                        "default": "12345"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country",
                        "default": "US"
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of recipient",
                    "default": "Widgets Inc."
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Check amount",
                    "default": 5
                  },
                  "number": {
                    "type": "string",
                    "description": "Check number"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description/memo for check",
                    "default": "Test Check"
                  },
                  "account": {
                    "type": "string",
                    "description": "Debit account id for funds (if sender has multiple bank accounts)"
                  },
                  "mail_type": {
                    "type": "string",
                    "enum": [
                      "USPS_CERTIFIED",
                      "USPS_FIRST_CLASS",
                      "OVERNIGHT"
                    ],
                    "description": "Optional mail type parameter"
                  },
                  "attachment": {
                    "type": "string",
                    "description": "Base64 encoded PDF attachment for recipient"
                  },
                  "remittance_advice": {
                    "anyOf": [
                      {
                        "type": "string",
                        "description": "Base64 encoded value of a CSV (max length 3990). We will convert the CSV into a list and there are no restrictions on the CSV content."
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Id of the record",
                              "maxLength": 32
                            },
                            "amount": {
                              "type": "number",
                              "format": "float",
                              "description": "Amount of the record"
                            },
                            "date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date of the record (yyyy-mm-dd)"
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of the record (max length 64)",
                              "maxLength": 64
                            }
                          }
                        },
                        "description": "List of the remittance records (will only appear on the mailed checks)"
                      }
                    ],
                    "description": "Check remittance advice that can be specified either as a Base64 encoded value of a CSV (Option 1) or a list of the remittance records (Option 2)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the new physical check",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for check"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Check creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Check number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Check description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Check amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the check"
                    },
                    "image_uri": {
                      "type": "string",
                      "description": "URI where image of the check can be accessed"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id or physical address of the check recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id or physical address of the check sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PAID",
                        "IN_PROCESS",
                        "UNPAID",
                        "VOID",
                        "EXPIRED",
                        "PRINTED",
                        "MAILED",
                        "FAILED",
                        "REFUNDED"
                      ],
                      "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, VOID, EXPIRED, PRINTED, MAILED, FAILED, REFUNDED)"
                    },
                    "remittance_advice": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Id of the record",
                            "maxLength": 32
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "description": "Amount of the record"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the record (yyyy-mm-dd)"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the record (max length 64)",
                            "maxLength": 64
                          }
                        }
                      },
                      "description": "List of the remittance records (if specified)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "date": "2019-09-13 19:54:05",
                      "description": "Test Check",
                      "id": "4321cea3b01d4b51bcd50dfcbbf1be59",
                      "image_uri": "https://checkbook-checks-dev.s3.amazonaws.com/8029c1b7-e05b-4303-9089-469c74155952.png",
                      "name": "Widgets Inc.",
                      "number": 1001,
                      "status": "IN_PROCESS",
                      "recipient": {
                        "city": "San Francisco",
                        "country": "US",
                        "line_1": "1234 N. 1st Street",
                        "line_2": "n°56",
                        "state": "CA",
                        "zip": "12345"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check/preview": {
      "post": {
        "summary": "Preview payment",
        "description": "Preview a new payment",
        "operationId": "post-check-preview",
        "tags": [
          "Sending Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "amount",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of recipient",
                    "default": "Widgets Inc."
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Payment amount",
                    "default": 5
                  },
                  "number": {
                    "type": "string",
                    "description": "Payment number",
                    "default": 1099
                  },
                  "description": {
                    "type": "string",
                    "description": "Description/memo for payment",
                    "default": "Test Payment"
                  },
                  "account": {
                    "type": "string",
                    "description": "Debit account id for funds (if sender has multiple bank accounts)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the preview check image",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "string",
                      "description": "Base64 encoded check image"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "image": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check/multi": {
      "post": {
        "summary": "Create multi party payment",
        "description": "Create a new multi party payment for two to five recipients",
        "operationId": "post-check-multi",
        "tags": [
          "Sending Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipients",
                  "name",
                  "amount"
                ],
                "properties": {
                  "recipients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "recipient"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of recipient"
                        },
                        "endorse_only": {
                          "type": "boolean",
                          "default": false,
                          "description": "Recipient is not allowed to deposit funds"
                        },
                        "recipient": {
                          "type": "string",
                          "description": "Email/id of recipient"
                        }
                      }
                    },
                    "minItems": 2,
                    "maxItems": 5,
                    "description": "List of two to five recipients",
                    "default": [
                      {
                        "name": "Jane Doe",
                        "recipient": "jane@example.com"
                      },
                      {
                        "name": "John Doe",
                        "recipient": "john@example.com"
                      }
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Payment amount",
                    "default": 5
                  },
                  "number": {
                    "type": "string",
                    "description": "Payment number"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description/memo for payment",
                    "default": "January Rent"
                  },
                  "account": {
                    "type": "string",
                    "description": "Debit account id for funds (if sender has multiple bank accounts)"
                  },
                  "attachment": {
                    "type": "string",
                    "description": "Base64 encoded PDF attachment for recipient"
                  },
                  "remittance_advice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Id of the record",
                          "maxLength": 32
                        },
                        "amount": {
                          "type": "number",
                          "format": "float",
                          "description": "Amount of the record"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the record (yyyy-mm-dd)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the record (max length 64)",
                          "maxLength": 64
                        }
                      }
                    },
                    "description": "List of the remittance records (will only appear on the mailed payments)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the new digital payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for check"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Check creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Check number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Check description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Check amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the check"
                    },
                    "image_uri": {
                      "type": "string",
                      "description": "URI where image of the check can be accessed"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id or physical address of the check recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id or physical address of the check sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PAID",
                        "IN_PROCESS",
                        "UNPAID",
                        "VOID",
                        "EXPIRED",
                        "PRINTED",
                        "MAILED",
                        "FAILED",
                        "REFUNDED"
                      ],
                      "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, VOID, EXPIRED, PRINTED, MAILED, FAILED, REFUNDED)"
                    },
                    "remittance_advice": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Id of the record",
                            "maxLength": 32
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "description": "Amount of the record"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the record (yyyy-mm-dd)"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the record (max length 64)",
                            "maxLength": 64
                          }
                        }
                      },
                      "description": "List of the remittance records (if specified)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "date": "2019-01-01 10:35:02",
                      "description": "January Rent",
                      "id": "c23f5e9649ef4e168720df4145b8f1c0",
                      "image_uri": "https://checkbook-checks-dev.s3.amazonaws.com/ecdc21c9-2ad3-4174-adbe-1896ff351382.png",
                      "name": "Jane Doe and John Doe",
                      "number": 9345,
                      "recipient": [
                        "jane@example.com",
                        "john@example.com"
                      ],
                      "status": "UNPAID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check/endorse/{check_id}": {
      "post": {
        "summary": "Endorse multi party payment",
        "description": "Endorse a multi party payment",
        "operationId": "post-check-endorse",
        "tags": [
          "Sending Payments"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the payment to endorse",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 255,
                    "description": "Endorser's name",
                    "default": "John Doe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check/deposit/{check_id}": {
      "post": {
        "summary": "Deposit a payment",
        "description": "Deposit a payment into a specified account",
        "operationId": "post-check-deposit",
        "tags": [
          "Sending Payments"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the payment to be deposited",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account"
                ],
                "properties": {
                  "account": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Identifier of the account to deposit the payment into"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The payment was deposited successfully"
          }
        }
      }
    },
    "/check/print/{check_id}": {
      "post": {
        "summary": "Print a payment",
        "description": "Print a payment in PDF format",
        "operationId": "post-check-print",
        "tags": [
          "Sending Payments"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the payment to be printed",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PDF file of the printed payment",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/check/webhook/{check_id}": {
      "put": {
        "summary": "Trigger a webhook notification",
        "description": "Trigger a webhook notification (on Sandbox only)",
        "operationId": "put-check-webhook",
        "tags": [
          "Sending Payments"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the payment to trigger the notification for",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "PAID",
                      "IN_PROCESS",
                      "UNPAID",
                      "VOID",
                      "EXPIRED",
                      "PRINTED",
                      "MAILED",
                      "FAILED",
                      "REFUNDED"
                    ],
                    "default": "PAID",
                    "description": "Payment status for the webhook notification"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The webhook notification was triggered successfully"
          }
        }
      }
    },
    "/check": {
      "get": {
        "summary": "Get sent/received payment",
        "description": "Return the sent/received checks",
        "operationId": "get-checks",
        "tags": [
          "Sending Payments"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page (10, 25, 50)",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                10,
                25,
                50
              ]
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date (yyyy-mm-dd)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date (yyyy-mm-dd)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING",
                "OUTGOING"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "+NUMBER",
                "-NUMBER",
                "+TYPE",
                "-TYPE",
                "+AMOUNT",
                "-AMOUNT",
                "+STATUS",
                "-STATUS",
                "+DATE",
                "-DATE",
                "+UPDATE",
                "-UPDATE",
                "+DESCRIPTION",
                "-DESCRIPTION"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Payment status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PAID",
                "IN_PROCESS",
                "UNPAID",
                "VOID",
                "EXPIRED",
                "PRINTED",
                "MAILED",
                "FAILED",
                "REFUNDED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for check"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Check creation timestamp"
                          },
                          "number": {
                            "type": "string",
                            "description": "Check number"
                          },
                          "description": {
                            "type": "string",
                            "description": "Check description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "description": "Check amount"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of third party who received the check"
                          },
                          "image_uri": {
                            "type": "string",
                            "description": "URI where image of the check can be accessed"
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Email/id or physical address of the check recipient"
                          },
                          "sender": {
                            "type": "string",
                            "description": "Email/id or physical address of the check sender"
                          },
                          "direction": {
                            "type": "string",
                            "enum": [
                              "INCOMING",
                              "OUTGOING"
                            ],
                            "description": "Check direction (INCOMING, OUTGOING)"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "PAID",
                              "IN_PROCESS",
                              "UNPAID",
                              "VOID",
                              "EXPIRED",
                              "PRINTED",
                              "MAILED",
                              "FAILED",
                              "REFUNDED"
                            ],
                            "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, VOID, EXPIRED, PRINTED, MAILED, FAILED, REFUNDED)"
                          },
                          "remittance_advice": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Id of the record",
                                  "maxLength": 32
                                },
                                "amount": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "Amount of the record"
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Date of the record (yyyy-mm-dd)"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Description of the record (max length 64)",
                                  "maxLength": 64
                                }
                              }
                            },
                            "description": "List of the remittance records (if specified)"
                          }
                        }
                      },
                      "description": "List of payments"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "pages": {
                      "type": "integer",
                      "description": "Total number of pages"
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of results"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "checks": [
                        {
                          "amount": 5,
                          "date": "2019-10-13 19:37:41",
                          "description": "Test Payment",
                          "id": "f71fbae77f1345689db646c5b029ddb3",
                          "image_uri": "https://checkbook-checks-dev.s3.amazonaws.com/fe44e0f3-352a-4553-ad31-44880863ed4c.png",
                          "name": "Widgets Inc.",
                          "number": 1001,
                          "recipient": "testing@checkbook.io",
                          "status": "IN_PROCESS"
                        },
                        {
                          "amount": 10,
                          "date": "2019-09-13 19:37:41",
                          "description": "Test Check",
                          "id": "e52fbae77f1345689db646c5b029aaa2",
                          "image_uri": "https://checkbook-checks-dev.s3.amazonaws.com/28738e08-eeb0-4f4d-8f4d-992b04cc98c9.png",
                          "name": "Widgets Inc.",
                          "number": 1000,
                          "recipient": "testing@checkbook.io",
                          "status": "UNPAID"
                        }
                      ],
                      "page": 1,
                      "pages": 1,
                      "total": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check/{check_id}": {
      "get": {
        "summary": "Get payment",
        "description": "Get the specified payment",
        "operationId": "get-check",
        "tags": [
          "Sending Payments"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the payment to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for check"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Check creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Check number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Check description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Check amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the check"
                    },
                    "image_uri": {
                      "type": "string",
                      "description": "URI where image of the check can be accessed"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id or physical address of the check recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id or physical address of the check sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PAID",
                        "IN_PROCESS",
                        "UNPAID",
                        "VOID",
                        "EXPIRED",
                        "PRINTED",
                        "MAILED",
                        "FAILED",
                        "REFUNDED"
                      ],
                      "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, VOID, EXPIRED, PRINTED, MAILED, FAILED, REFUNDED)"
                    },
                    "remittance_advice": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Id of the record",
                            "maxLength": 32
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "description": "Amount of the record"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of the record (yyyy-mm-dd)"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the record (max length 64)",
                            "maxLength": 64
                          }
                        }
                      },
                      "description": "List of the remittance records (if specified)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "date": "2019-09-13 19:37:41",
                      "description": "Test Check",
                      "direction": "OUTGOING",
                      "id": "f71fbae77f1345689db646c5b029ddb3",
                      "image_uri": "https://checkbook-checks-dev.s3.amazonaws.com/fe44e0f3-352a-4553-ad31-44880863ed4c.png",
                      "name": "Widgets Inc.",
                      "number": "8981",
                      "recipient": "testing@checkbook.io",
                      "sender": "demo@checkbook.io",
                      "status": "UNPAID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check/{check_id}/fail": {
      "get": {
        "summary": "Get details on a failed payment",
        "description": "Get details on a failed payment",
        "operationId": "get-check-fail",
        "tags": [
          "Sending Payments"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the payment to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Transaction return code"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "code": "R01"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check/{check_id}/tracking": {
      "get": {
        "summary": "Get tracking details on a mailed check",
        "description": "Get tracking details on a mailed check",
        "operationId": "get-check-tracking",
        "tags": [
          "Sending Payments"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the payment to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the tracking details on a mailed check",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tracking": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action_ts": {
                            "type": "string",
                            "description": "Tracking timestamp"
                          },
                          "location": {
                            "type": "string",
                            "description": "Tracking location"
                          }
                        }
                      },
                      "description": "Array containing the mailed check's tracking information"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check/{check_id}/deposit": {
      "get": {
        "summary": "Get deposit details",
        "description": "Get details on which option the recipient selected for a payment",
        "operationId": "get-check-deposit",
        "tags": [
          "Sending Payments"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the payment to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified payment deposit type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "check_type": {
                      "type": "string",
                      "description": "Returns the check return type."
                    },
                    "eta": {
                      "type": "string",
                      "description": "Estimated date the funds will be received."
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "check_type": "ACH",
                      "eta": "2021-04-18"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Void Payment",
        "description": "Void the specified payment",
        "operationId": "delete-check",
        "tags": [
          "Sending Payments"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the payment to void",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lockbox/digital": {
      "post": {
        "summary": "Create lockbox digital Payment",
        "description": "Create a new lockbox digital payment",
        "operationId": "post-lockbox-digital",
        "tags": [
          "Payment Approval"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipient",
                  "name",
                  "amount"
                ],
                "properties": {
                  "recipient": {
                    "type": "string",
                    "description": "Email/id of recipient",
                    "default": "testing@checkbook.io"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of recipient",
                    "default": "Widgets Inc."
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Payment amount",
                    "default": 5
                  },
                  "number": {
                    "type": "string",
                    "description": "Payment number"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description/memo for payment",
                    "default": "Test Payment"
                  },
                  "account": {
                    "type": "string",
                    "description": "Debit account id for funds (if sender has multiple bank accounts)"
                  },
                  "attachment": {
                    "type": "string",
                    "description": "Base64 encoded PDF attachment for recipient"
                  },
                  "remittance_advice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Id of the record",
                          "maxLength": 32
                        },
                        "amount": {
                          "type": "number",
                          "format": "float",
                          "description": "Amount of the record"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the record (yyyy-mm-dd)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the record (max length 64)",
                          "maxLength": 64
                        }
                      }
                    },
                    "description": "List of the remittance records (will only appear on the mailed payments)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the new lockbox digital payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for check"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Check creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Check number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Check description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Check amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the check"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id or physical address of the check recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id or physical address of the check sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "UNPAID",
                        "VOID",
                        "APPROVED"
                      ],
                      "description": "Current status of the check (UNPAID, VOID, APPROVED)"
                    },
                    "remittance_advice": {
                      "anyOf": [
                        {
                          "type": "string",
                          "description": "Base64 encoded value of a CSV (max length 3990). We will convert the CSV into a list and there are no restrictions on the CSV content."
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Id of the record",
                                "maxLength": 32
                              },
                              "amount": {
                                "type": "number",
                                "format": "float",
                                "description": "Amount of the record"
                              },
                              "date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of the record (yyyy-mm-dd)"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the record (max length 64)",
                                "maxLength": 64
                              }
                            }
                          },
                          "description": "List of the remittance records (will only appear on the mailed checks)"
                        }
                      ],
                      "description": "Check remittance advice that can be specified either as a Base64 encoded value of a CSV (Option 1) or a list of the remittance records (Option 2)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "date": "2019-09-13 19:37:41",
                      "description": "Test Check",
                      "id": "f71fbae77f1345689db646c5b029ddb3",
                      "name": "Widgets Inc.",
                      "number": 1001,
                      "recipient": "testing@checkbook.io",
                      "status": "UNPAID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lockbox/physical": {
      "post": {
        "summary": "Create lockbox physical check",
        "description": "Create a new lockbox physical check",
        "operationId": "post-lockbox-physical",
        "tags": [
          "Payment Approval"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipient",
                  "name",
                  "amount"
                ],
                "properties": {
                  "recipient": {
                    "type": "object",
                    "description": "Physical address of recipient",
                    "required": [
                      "line_1",
                      "city",
                      "state",
                      "zip"
                    ],
                    "properties": {
                      "line_1": {
                        "type": "string",
                        "description": "Street line 1",
                        "default": "1234 N. 1st Street"
                      },
                      "line_2": {
                        "type": "string",
                        "description": "Street line 2",
                        "default": "n°56"
                      },
                      "city": {
                        "type": "string",
                        "description": "City",
                        "default": "San Francisco"
                      },
                      "state": {
                        "type": "string",
                        "description": "State",
                        "default": "CA"
                      },
                      "zip": {
                        "type": "string",
                        "description": "Zip/postal code",
                        "default": "12345"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country",
                        "default": "US"
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of recipient",
                    "default": "Widgets Inc."
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Check amount",
                    "default": 5
                  },
                  "number": {
                    "type": "string",
                    "description": "Check number"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description/memo for check",
                    "default": "Test Check"
                  },
                  "account": {
                    "type": "string",
                    "description": "Debit account id for funds (if sender has multiple bank accounts)"
                  },
                  "attachment": {
                    "type": "string",
                    "description": "Base64 encoded PDF attachment for recipient"
                  },
                  "remittance_advice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Id of the record",
                          "maxLength": 32
                        },
                        "amount": {
                          "type": "number",
                          "format": "float",
                          "description": "Amount of the record"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the record (yyyy-mm-dd)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the record (max length 64)",
                          "maxLength": 64
                        }
                      }
                    },
                    "description": "List of the remittance records (will only appear on the mailed checks)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the new lockbox physical check",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for check"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Check creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Check number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Check description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Check amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the check"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id or physical address of the check recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id or physical address of the check sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "UNPAID",
                        "VOID",
                        "APPROVED"
                      ],
                      "description": "Current status of the check (UNPAID, VOID, APPROVED)"
                    },
                    "remittance_advice": {
                      "anyOf": [
                        {
                          "type": "string",
                          "description": "Base64 encoded value of a CSV (max length 3990). We will convert the CSV into a list and there are no restrictions on the CSV content."
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Id of the record",
                                "maxLength": 32
                              },
                              "amount": {
                                "type": "number",
                                "format": "float",
                                "description": "Amount of the record"
                              },
                              "date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of the record (yyyy-mm-dd)"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the record (max length 64)",
                                "maxLength": 64
                              }
                            }
                          },
                          "description": "List of the remittance records (will only appear on the mailed checks)"
                        }
                      ],
                      "description": "Check remittance advice that can be specified either as a Base64 encoded value of a CSV (Option 1) or a list of the remittance records (Option 2)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "date": "2019-09-13 19:54:05",
                      "description": "Test Check",
                      "id": "4321cea3b01d4b51bcd50dfcbbf1be59",
                      "name": "Widgets Inc.",
                      "number": 1001,
                      "status": "IN_PROCESS",
                      "recipient": {
                        "city": "San Francisco",
                        "country": "US",
                        "line_1": "1234 N. 1st Street",
                        "line_2": "n°56",
                        "state": "CA",
                        "zip": "12345"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lockbox/multi": {
      "post": {
        "summary": "Create lockbox multi party payment",
        "description": "Create a new lockbox multi party payment",
        "operationId": "post-lockbox-multi",
        "tags": [
          "Payment Approval"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipients",
                  "name",
                  "amount"
                ],
                "properties": {
                  "recipients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "recipient"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of recipient"
                        },
                        "recipient": {
                          "type": "string",
                          "description": "Email/id of recipient"
                        }
                      }
                    },
                    "minItems": 2,
                    "maxItems": 2,
                    "description": "List of the two recipients",
                    "default": [
                      {
                        "name": "Jane Doe",
                        "recipient": "jane@example.com"
                      },
                      {
                        "name": "John Doe",
                        "recipient": "john@example.com"
                      }
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Check amount",
                    "default": 5
                  },
                  "number": {
                    "type": "string",
                    "description": "Check number"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description/memo for check",
                    "default": "January Rent"
                  },
                  "account": {
                    "type": "string",
                    "description": "Debit account id for funds (if sender has multiple bank accounts)"
                  },
                  "attachment": {
                    "type": "string",
                    "description": "Base64 encoded PDF attachment for recipient"
                  },
                  "remittance_advice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Id of the record",
                          "maxLength": 32
                        },
                        "amount": {
                          "type": "number",
                          "format": "float",
                          "description": "Amount of the record"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the record (yyyy-mm-dd)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the record (max length 64)",
                          "maxLength": 64
                        }
                      }
                    },
                    "description": "List of the remittance records (will only appear on the mailed checks)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the new lockbox digital check",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for check"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Check creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Check number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Check description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Check amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the check"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id or physical address of the check recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id or physical address of the check sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "UNPAID",
                        "VOID",
                        "APPROVED"
                      ],
                      "description": "Current status of the check (UNPAID, VOID, APPROVED)"
                    },
                    "remittance_advice": {
                      "anyOf": [
                        {
                          "type": "string",
                          "description": "Base64 encoded value of a CSV (max length 3990). We will convert the CSV into a list and there are no restrictions on the CSV content."
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Id of the record",
                                "maxLength": 32
                              },
                              "amount": {
                                "type": "number",
                                "format": "float",
                                "description": "Amount of the record"
                              },
                              "date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of the record (yyyy-mm-dd)"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the record (max length 64)",
                                "maxLength": 64
                              }
                            }
                          },
                          "description": "List of the remittance records (will only appear on the mailed checks)"
                        }
                      ],
                      "description": "Check remittance advice that can be specified either as a Base64 encoded value of a CSV (Option 1) or a list of the remittance records (Option 2)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "date": "2019-01-01 10:35:02",
                      "description": "January Rent",
                      "id": "c23f5e9649ef4e168720df4145b8f1c0",
                      "name": "Jane Doe and John Doe",
                      "number": 9345,
                      "recipient": [
                        "jane@example.com",
                        "john@example.com"
                      ],
                      "status": "UNPAID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lockbox/release": {
      "post": {
        "summary": "Release lockbox payment",
        "description": "Create a live payment from a lockbox payment",
        "operationId": "post-lockbox-release",
        "tags": [
          "Payment Approval"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Payment id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lockbox": {
      "get": {
        "summary": "Get lockbox payments",
        "description": "Return the lockbox payments",
        "operationId": "get-lockbox-checks",
        "tags": [
          "Payment Approval"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page (10, 25, 50)",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                10,
                25,
                50
              ]
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date (yyyy-mm-dd)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date (yyyy-mm-dd)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING",
                "OUTGOING"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "+NUMBER",
                "-NUMBER",
                "+TYPE",
                "-TYPE",
                "+AMOUNT",
                "-AMOUNT",
                "+STATUS",
                "-STATUS",
                "+DATE",
                "-DATE",
                "+UPDATE",
                "-UPDATE",
                "+DESCRIPTION",
                "-DESCRIPTION"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Payment status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "UNPAID",
                "VOID",
                "APPROVED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of lockbox payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for check"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Check creation timestamp"
                          },
                          "number": {
                            "type": "string",
                            "description": "Check number"
                          },
                          "description": {
                            "type": "string",
                            "description": "Check description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "description": "Check amount"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of third party who received the check"
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Email/id or physical address of the check recipient"
                          },
                          "sender": {
                            "type": "string",
                            "description": "Email/id or physical address of the check sender"
                          },
                          "direction": {
                            "type": "string",
                            "enum": [
                              "INCOMING",
                              "OUTGOING"
                            ],
                            "description": "Check direction (INCOMING, OUTGOING)"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "UNPAID",
                              "VOID",
                              "APPROVED"
                            ],
                            "description": "Current status of the check (UNPAID, VOID, APPROVED)"
                          },
                          "remittance_advice": {
                            "anyOf": [
                              {
                                "type": "string",
                                "description": "Base64 encoded value of a CSV (max length 3990). We will convert the CSV into a list and there are no restrictions on the CSV content."
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Id of the record",
                                      "maxLength": 32
                                    },
                                    "amount": {
                                      "type": "number",
                                      "format": "float",
                                      "description": "Amount of the record"
                                    },
                                    "date": {
                                      "type": "string",
                                      "format": "date",
                                      "description": "Date of the record (yyyy-mm-dd)"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "Description of the record (max length 64)",
                                      "maxLength": 64
                                    }
                                  }
                                },
                                "description": "List of the remittance records (will only appear on the mailed checks)"
                              }
                            ],
                            "description": "Check remittance advice that can be specified either as a Base64 encoded value of a CSV (Option 1) or a list of the remittance records (Option 2)"
                          }
                        }
                      },
                      "description": "List of lockbox payments"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "pages": {
                      "type": "integer",
                      "description": "Total number of pages"
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of results"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "checks": [
                        {
                          "amount": 5,
                          "date": "2019-10-13 19:37:41",
                          "description": "Test Check",
                          "id": "f71fbae77f1345689db646c5b029ddb3",
                          "name": "Widgets Inc.",
                          "number": 1001,
                          "recipient": "testing@checkbook.io",
                          "status": "IN_PROCESS"
                        },
                        {
                          "amount": 10,
                          "date": "2019-09-13 19:37:41",
                          "description": "Test Check",
                          "id": "e52fbae77f1345689db646c5b029aaa2",
                          "name": "Widgets Inc.",
                          "number": 1000,
                          "recipient": "testing@checkbook.io",
                          "status": "UNPAID"
                        }
                      ],
                      "page": 1,
                      "pages": 1,
                      "total": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lockbox/{check_id}": {
      "get": {
        "summary": "Get lockbox payment",
        "description": "Get the specified lockbox payment",
        "operationId": "get-lockbox-check",
        "tags": [
          "Payment Approval"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the lockbox payment to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified lockbox check",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for check"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Check creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Check number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Check description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Check amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the check"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id or physical address of the check recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id or physical address of the check sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "UNPAID",
                        "VOID",
                        "APPROVED"
                      ],
                      "description": "Current status of the check (UNPAID, VOID, APPROVED)"
                    },
                    "remittance_advice": {
                      "anyOf": [
                        {
                          "type": "string",
                          "description": "Base64 encoded value of a CSV (max length 3990). We will convert the CSV into a list and there are no restrictions on the CSV content."
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Id of the record",
                                "maxLength": 32
                              },
                              "amount": {
                                "type": "number",
                                "format": "float",
                                "description": "Amount of the record"
                              },
                              "date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of the record (yyyy-mm-dd)"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the record (max length 64)",
                                "maxLength": 64
                              }
                            }
                          },
                          "description": "List of the remittance records (will only appear on the mailed checks)"
                        }
                      ],
                      "description": "Check remittance advice that can be specified either as a Base64 encoded value of a CSV (Option 1) or a list of the remittance records (Option 2)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "date": "2019-09-13 19:37:41",
                      "description": "Test Check",
                      "direction": "OUTGOING",
                      "id": "f71fbae77f1345689db646c5b029ddb3",
                      "name": "Widgets Inc.",
                      "number": "8981",
                      "recipient": "testing@checkbook.io",
                      "sender": "demo@checkbook.io",
                      "status": "UNPAID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update lockbox payment",
        "description": "Update the specified lockbox payment",
        "operationId": "put-lockbox-check",
        "tags": [
          "Payment Approval"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the lockbox payment to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipient": {
                    "type": "string",
                    "description": "Email/id of recipient",
                    "default": "testing@checkbook.io"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of recipient",
                    "default": "Widgets Inc."
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Check amount",
                    "default": 5
                  },
                  "number": {
                    "type": "string",
                    "description": "Check number"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description/memo for check",
                    "default": "Test Check"
                  },
                  "account": {
                    "type": "string",
                    "description": "Debit account id for funds (if sender has multiple bank accounts)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Void lockbox payment",
        "description": "Void the specified lockbox check",
        "operationId": "delete-lockbox-check",
        "tags": [
          "Payment Approval"
        ],
        "parameters": [
          {
            "name": "check_id",
            "in": "path",
            "required": true,
            "description": "The id of the lockbox payment to void",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/payment": {
      "post": {
        "summary": "Pay an invoice",
        "description": "Pay an existing invoice",
        "operationId": "post-invoice-payment",
        "tags": [
          "Receiving Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "amount",
                  "account"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Invoice id"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Amount to be paid",
                    "default": 5
                  },
                  "account": {
                    "type": "string",
                    "description": "Identifier of bank account from which to pay the invoice"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the invoice",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for invoice"
                    },
                    "check_id": {
                      "type": "string",
                      "description": "Identifier for the check that paid the invoice"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Invoice creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Invoice number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Invoice description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Invoice amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the invoice"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id of the invoice recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id of the invoice sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PAID",
                        "IN_PROCESS",
                        "UNPAID",
                        "CANCELED"
                      ],
                      "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, CANCELED)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "date": "2019-11-01 14:24:44",
                      "id": "4e5a4bdad7a34feb9d5c407ccf469123",
                      "name": "Widgets Inc.",
                      "status": "PAID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice": {
      "post": {
        "summary": "Create invoice",
        "description": "Create a new invoice",
        "operationId": "post-invoice",
        "tags": [
          "Receiving Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "description",
                  "name",
                  "recipient"
                ],
                "properties": {
                  "account": {
                    "type": "string",
                    "description": "Identifier for the source bank account"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Invoice amount",
                    "default": 5
                  },
                  "attachment": {
                    "type": "string",
                    "description": "Base64 encoded PDF attachment for recipient"
                  },
                  "description": {
                    "type": "string",
                    "description": "Invoice description",
                    "default": "Test Invoice"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of third party who received the invoice",
                    "default": "Widgets Inc."
                  },
                  "number": {
                    "type": "string",
                    "description": "Invoice number"
                  },
                  "recipient": {
                    "type": "string",
                    "description": "Email/id of the invoice recipient",
                    "default": "testing@checkbook.io"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the new invoice",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for invoice"
                    },
                    "check_id": {
                      "type": "string",
                      "description": "Identifier for the check that paid the invoice"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Invoice creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Invoice number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Invoice description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Invoice amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the invoice"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id of the invoice recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id of the invoice sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PAID",
                        "IN_PROCESS",
                        "UNPAID",
                        "CANCELED"
                      ],
                      "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, CANCELED)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "date": "2019-11-01 14:24:44",
                      "description": "Test Invoice",
                      "id": "4e5a4bdad7a34feb9d5c407ccf469123",
                      "name": "Widgets Inc.",
                      "number": 1484,
                      "recipient": "testing@checkbook.io",
                      "status": "UNPAID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get sent/received invoices",
        "description": "Return the sent/received invoices",
        "operationId": "get-invoices",
        "tags": [
          "Receiving Payments"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page (10, 25, 50)",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                10,
                25,
                50
              ]
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date (yyyy-mm-dd)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date (yyyy-mm-dd)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING",
                "OUTGOING"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "+NUMBER",
                "-NUMBER",
                "+TYPE",
                "-TYPE",
                "+AMOUNT",
                "-AMOUNT",
                "+STATUS",
                "-STATUS",
                "+DATE",
                "-DATE",
                "+UPDATE",
                "-UPDATE",
                "+DESCRIPTION",
                "-DESCRIPTION"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Invoice status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PAID",
                "IN_PROCESS",
                "UNPAID",
                "CANCELED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of invoices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for invoice"
                          },
                          "check_id": {
                            "type": "string",
                            "description": "Identifier for the check that paid the invoice"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Invoice creation timestamp"
                          },
                          "number": {
                            "type": "string",
                            "description": "Invoice number"
                          },
                          "description": {
                            "type": "string",
                            "description": "Invoice description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "description": "Invoice amount"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of third party who received the invoice"
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Email/id of the invoice recipient"
                          },
                          "sender": {
                            "type": "string",
                            "description": "Email/id of the invoice sender"
                          },
                          "direction": {
                            "type": "string",
                            "enum": [
                              "INCOMING",
                              "OUTGOING"
                            ],
                            "description": "Check direction (INCOMING, OUTGOING)"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "PAID",
                              "IN_PROCESS",
                              "UNPAID",
                              "CANCELED"
                            ],
                            "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, CANCELED)"
                          }
                        }
                      },
                      "description": "List of invoices"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "pages": {
                      "type": "integer",
                      "description": "Total number of pages"
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of results"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "invoices": [
                        {
                          "amount": 5,
                          "check_id": null,
                          "date": "2019-11-01 14:24:44",
                          "description": "Test Invoice",
                          "direction": "OUTGOING",
                          "id": "4eaaaadad7a34feb9d5c407ccf469567",
                          "name": "Widgets Inc.",
                          "number": "1484",
                          "recipient": "testing@checkbook.io",
                          "sender": "demo@checkbook.io",
                          "status": "UNPAID"
                        },
                        {
                          "amount": 5,
                          "check_id": "f71fbae77f1345689db646c5b029ddb3",
                          "date": "2019-11-01 14:24:44",
                          "description": "Test Invoice",
                          "direction": "OUTGOING",
                          "id": "4e5a4bdad7a34feb9d5c407ccf469123",
                          "name": "Widgets Inc.",
                          "number": "1484",
                          "recipient": "testing@checkbook.io",
                          "sender": "demo@checkbook.io",
                          "status": "PAID"
                        }
                      ],
                      "page": 1,
                      "pages": 1,
                      "total": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/{invoice_id}": {
      "get": {
        "summary": "Get invoice",
        "description": "Get the specified invoice",
        "operationId": "get-invoice",
        "tags": [
          "Receiving Payments"
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "description": "The id of the invoice to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified invoice",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for invoice"
                    },
                    "check_id": {
                      "type": "string",
                      "description": "Identifier for the check that paid the invoice"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Invoice creation timestamp"
                    },
                    "number": {
                      "type": "string",
                      "description": "Invoice number"
                    },
                    "description": {
                      "type": "string",
                      "description": "Invoice description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Invoice amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who received the invoice"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id of the invoice recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id of the invoice sender"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PAID",
                        "IN_PROCESS",
                        "UNPAID",
                        "CANCELED"
                      ],
                      "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, CANCELED)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "amount": 5,
                      "check_id": "f71fbae77f1345689db646c5b029ddb3",
                      "date": "2019-11-01 14:24:44",
                      "description": "Test Invoice",
                      "direction": "OUTGOING",
                      "id": "4e5a4bdad7a34feb9d5c407ccf469123",
                      "name": "Widgets Inc.",
                      "number": "1484",
                      "recipient": "testing@checkbook.io",
                      "sender": "demo@checkbook.io",
                      "status": "PAID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancel invoice",
        "description": "Cancel the specified check",
        "operationId": "delete-invoice",
        "tags": [
          "Receiving Payments"
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "description": "The id of the invoice to cancel",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription/check": {
      "post": {
        "summary": "Create payment subscription",
        "description": "Create a new payment subscription",
        "operationId": "post-subscription-check",
        "tags": [
          "Subscription"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipient",
                  "name",
                  "amount",
                  "interval"
                ],
                "properties": {
                  "recipient": {
                    "anyOf": [
                      {
                        "type": "string",
                        "description": "Email/id of recipient"
                      },
                      {
                        "type": "object",
                        "description": "Physical address of recipient",
                        "required": [
                          "line_1",
                          "city",
                          "state",
                          "zip"
                        ],
                        "properties": {
                          "line_1": {
                            "type": "string",
                            "description": "Street line 1",
                            "default": "1234 N. 1st Street"
                          },
                          "line_2": {
                            "type": "string",
                            "description": "Street line 2",
                            "default": "n°56"
                          },
                          "city": {
                            "type": "string",
                            "description": "City",
                            "default": "San Francisco"
                          },
                          "state": {
                            "type": "string",
                            "description": "State",
                            "default": "CA"
                          },
                          "zip": {
                            "type": "string",
                            "description": "Zip/postal code",
                            "default": "12345"
                          },
                          "country": {
                            "type": "string",
                            "description": "Country",
                            "default": "US"
                          }
                        }
                      }
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of recipient",
                    "default": "Widgets Inc."
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Payment amount",
                    "default": 5
                  },
                  "interval": {
                    "type": "string",
                    "enum": [
                      "WEEKLY",
                      "MONTHLY"
                    ],
                    "description": "How often the subscription will recur",
                    "default": "WEEKLY"
                  },
                  "start_date": {
                    "type": "string",
                    "description": "yyyy-mm-dd formatted start date for subscription (this is the first date the subsription will be sent out and defaults to the current timestamp)"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description/memo for payment",
                    "default": "Test Payment Subscription"
                  },
                  "duration": {
                    "type": "integer",
                    "description": "Number of times the subscription should recur (defaults to indefinite)"
                  },
                  "account": {
                    "type": "string",
                    "description": "Debit account id for funds (if sender has multiple bank accounts)"
                  },
                  "remittance_advice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Id of the record",
                          "maxLength": 32
                        },
                        "amount": {
                          "type": "number",
                          "format": "float",
                          "description": "Amount of the record"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the record (yyyy-mm-dd)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the record (max length 64)",
                          "maxLength": 64
                        }
                      }
                    },
                    "description": "List of the remittance records (will only appear on the mailed checks)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the new payment subscription",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for invoice"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Subscription creation timestamp"
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Subscription start date (yyyy-mm-dd)"
                    },
                    "number": {
                      "type": "string",
                      "description": "Subscription number"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CHECK",
                        "INVOICE"
                      ],
                      "description": "Type of the subscription (CHECK, INVOICE)"
                    },
                    "interval": {
                      "type": "string",
                      "enum": [
                        "WEEKLY",
                        "MONTHLY"
                      ],
                      "description": "How often the subscription will recur (WEEKLY, MONTHLY)"
                    },
                    "description": {
                      "type": "string",
                      "description": "Subscription description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Subscription amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who is receiving the check/invoice"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id of the invoice recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id of the invoice sender"
                    },
                    "account": {
                      "type": "string",
                      "description": "Identifier for the bank account attached to the subscription"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Number of times the subscription will recur (-1 indicates indefinite)"
                    },
                    "skipped": {
                      "type": "array",
                      "description": "List of skipped subscription indexes (e.g. [1] indicates the first subscription will be skipped)"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "IN_PROCESS",
                        "CANCELED"
                      ],
                      "description": "Current status of the check (IN_PROCESS, CANCELED)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "account": "efdbaaaa17b244abba084e6c2ccfc990",
                      "amount": 5,
                      "date": "2019-11-01 15:52:58",
                      "description": "Test Payment Subscription",
                      "duration": -1,
                      "id": "e8487e2a10ec44dd800a33616eb09cf8",
                      "interval": "WEEKLY",
                      "name": "Widgets Inc.",
                      "recipient": "testing@checkbook.io",
                      "start_date": "2019-11-01",
                      "type": "CHECK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription/invoice": {
      "post": {
        "summary": "Create invoice subscription",
        "description": "Create a new invoice subscription",
        "operationId": "post-subscription-invoice",
        "tags": [
          "Subscription"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipient",
                  "name",
                  "amount",
                  "interval",
                  "description"
                ],
                "properties": {
                  "recipient": {
                    "type": "string",
                    "description": "Email/id of recipient",
                    "default": "testing@checkbook.io"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of recipient",
                    "default": "Widgets Inc."
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Invoice amount",
                    "default": 5
                  },
                  "interval": {
                    "type": "string",
                    "enum": [
                      "WEEKLY",
                      "MONTHLY"
                    ],
                    "description": "How often the subscription will recur",
                    "default": "WEEKLY"
                  },
                  "start_date": {
                    "type": "string",
                    "description": "yyyy-mm-dd formatted start date for subscription (this is the first date the subsription will be sent out and defaults to the current timestamp)"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for invoice",
                    "default": "Test Invoice Subscription"
                  },
                  "duration": {
                    "type": "integer",
                    "description": "Number of times the subscription should recur (defaults to indefinite)"
                  },
                  "account": {
                    "type": "string",
                    "description": "Debit account id for funds (if sender has multiple bank accounts)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the new invoice subscription",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for invoice"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Subscription creation timestamp"
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Subscription start date (yyyy-mm-dd)"
                    },
                    "number": {
                      "type": "string",
                      "description": "Subscription number"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CHECK",
                        "INVOICE"
                      ],
                      "description": "Type of the subscription (CHECK, INVOICE)"
                    },
                    "interval": {
                      "type": "string",
                      "enum": [
                        "WEEKLY",
                        "MONTHLY"
                      ],
                      "description": "How often the subscription will recur (WEEKLY, MONTHLY)"
                    },
                    "description": {
                      "type": "string",
                      "description": "Subscription description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Subscription amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who is receiving the check/invoice"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id of the invoice recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id of the invoice sender"
                    },
                    "account": {
                      "type": "string",
                      "description": "Identifier for the bank account attached to the subscription"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Number of times the subscription will recur (-1 indicates indefinite)"
                    },
                    "skipped": {
                      "type": "array",
                      "description": "List of skipped subscription indexes (e.g. [1] indicates the first subscription will be skipped)"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "IN_PROCESS",
                        "CANCELED"
                      ],
                      "description": "Current status of the check (IN_PROCESS, CANCELED)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "account": "efdbaaaa17b244abba084e6c2ccfc990",
                      "amount": 5,
                      "date": "2019-11-01 15:43:45",
                      "description": "Test Invoice Subscription",
                      "duration": -1,
                      "id": "3fa9fd4d9ea742bdbf99d5a1f4f2a393",
                      "interval": "WEEKLY",
                      "name": "Widgets Inc.",
                      "recipient": "testing@checkbook.io",
                      "start_date": "2019-11-01",
                      "type": "INVOICE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription": {
      "get": {
        "summary": "Get subscriptions",
        "description": "Return the subscriptions",
        "operationId": "get-subscriptions",
        "tags": [
          "Subscription"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page (10, 25, 50)",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                10,
                25,
                50
              ]
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date (yyyy-mm-dd)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date (yyyy-mm-dd)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "INCOMING",
                "OUTGOING"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "+NUMBER",
                "-NUMBER",
                "+TYPE",
                "-TYPE",
                "+AMOUNT",
                "-AMOUNT",
                "+STATUS",
                "-STATUS",
                "+DATE",
                "-DATE",
                "+UPDATE",
                "-UPDATE",
                "+DESCRIPTION",
                "-DESCRIPTION"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Subscription status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "IN_PROCESS",
                "CANCELED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subscriptions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for invoice"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Subscription creation timestamp"
                          },
                          "start_date": {
                            "type": "string",
                            "description": "Subscription start date (yyyy-mm-dd)"
                          },
                          "number": {
                            "type": "string",
                            "description": "Subscription number"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "CHECK",
                              "INVOICE"
                            ],
                            "description": "Type of the subscription (CHECK, INVOICE)"
                          },
                          "interval": {
                            "type": "string",
                            "enum": [
                              "WEEKLY",
                              "MONTHLY"
                            ],
                            "description": "How often the subscription will recur (WEEKLY, MONTHLY)"
                          },
                          "description": {
                            "type": "string",
                            "description": "Subscription description"
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "description": "Subscription amount"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of third party who is receiving the check/invoice"
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Email/id of the invoice recipient"
                          },
                          "sender": {
                            "type": "string",
                            "description": "Email/id of the invoice sender"
                          },
                          "account": {
                            "type": "string",
                            "description": "Identifier for the bank account attached to the subscription"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Number of times the subscription will recur (-1 indicates indefinite)"
                          },
                          "skipped": {
                            "type": "array",
                            "description": "List of skipped subscription indexes (e.g. [1] indicates the first subscription will be skipped)"
                          },
                          "direction": {
                            "type": "string",
                            "enum": [
                              "INCOMING",
                              "OUTGOING"
                            ],
                            "description": "Check direction (INCOMING, OUTGOING)"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "IN_PROCESS",
                              "CANCELED"
                            ],
                            "description": "Current status of the check (IN_PROCESS, CANCELED)"
                          }
                        }
                      },
                      "description": "List of subscriptions"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "pages": {
                      "type": "integer",
                      "description": "Total number of pages"
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of results"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "subscriptions": [
                        {
                          "account": "efdbaaaa17b244abba084e6c2ccfc990",
                          "amount": 5,
                          "date": "2019-11-01 15:52:58",
                          "description": "Test Check Subscription",
                          "duration": -1,
                          "id": "e8487e2a10ec44dd800a33616eb09cf8",
                          "interval": "WEEKLY",
                          "name": "Widgets Inc.",
                          "recipient": "testing@checkbook.io",
                          "start_date": "2019-11-01",
                          "type": "CHECK"
                        },
                        {
                          "account": "efdbaaaa17b244abba084e6c2ccfc990",
                          "amount": 5,
                          "date": "2019-11-01 15:43:45",
                          "description": "Test Invoice Subscription",
                          "duration": -1,
                          "id": "3fa9fd4d9ea742bdbf99d5a1f4f2a393",
                          "interval": "WEEKLY",
                          "name": "Widgets Inc.",
                          "recipient": "testing@checkbook.io",
                          "start_date": "2019-11-01",
                          "type": "INVOICE"
                        }
                      ],
                      "page": 1,
                      "pages": 1,
                      "total": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription/{subscription_id}": {
      "get": {
        "summary": "Get subscription",
        "description": "Get the specified subscription",
        "operationId": "get-subscription",
        "tags": [
          "Subscription"
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "description": "The id of the subscription to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified subscription",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for invoice"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Subscription creation timestamp"
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Subscription start date (yyyy-mm-dd)"
                    },
                    "number": {
                      "type": "string",
                      "description": "Subscription number"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CHECK",
                        "INVOICE"
                      ],
                      "description": "Type of the subscription (CHECK, INVOICE)"
                    },
                    "interval": {
                      "type": "string",
                      "enum": [
                        "WEEKLY",
                        "MONTHLY"
                      ],
                      "description": "How often the subscription will recur (WEEKLY, MONTHLY)"
                    },
                    "description": {
                      "type": "string",
                      "description": "Subscription description"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Subscription amount"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of third party who is receiving the check/invoice"
                    },
                    "recipient": {
                      "type": "string",
                      "description": "Email/id of the invoice recipient"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Email/id of the invoice sender"
                    },
                    "account": {
                      "type": "string",
                      "description": "Identifier for the bank account attached to the subscription"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Number of times the subscription will recur (-1 indicates indefinite)"
                    },
                    "skipped": {
                      "type": "array",
                      "description": "List of skipped subscription indexes (e.g. [1] indicates the first subscription will be skipped)"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "INCOMING",
                        "OUTGOING"
                      ],
                      "description": "Check direction (INCOMING, OUTGOING)"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "IN_PROCESS",
                        "CANCELED"
                      ],
                      "description": "Current status of the check (IN_PROCESS, CANCELED)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "account": "efdbaaaa17b244abba084e6c2ccfc990",
                      "amount": 5,
                      "date": "2019-11-01 15:43:45",
                      "description": "Test Invoice Subscription",
                      "direction": "OUTGOING",
                      "duration": -1,
                      "id": "3fa9fd4d9ea742bdbf99d5a1f4f2a393",
                      "interval": "WEEKLY",
                      "name": "Widgets Inc.",
                      "number": "None",
                      "recipient": "testing@checkbook.io",
                      "sender": "demo@checkbook.io",
                      "skipped": [],
                      "start_date": "2019-11-01",
                      "status": "IN_PROCESS",
                      "type": "INVOICE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update subscription",
        "description": "Update the specified subscription",
        "operationId": "put-subscription",
        "tags": [
          "Subscription"
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "description": "The id of the subscription to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "skipped"
                ],
                "properties": {
                  "skipped": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "list of skipped subscription indexes (e.g. [1] indicates the first subscription will be skipped)",
                    "default": [
                      1
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove subscription",
        "description": "Remove the specified subscription",
        "operationId": "delete-subscription",
        "tags": [
          "Subscription"
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "description": "The id of the subscription to remove",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bank/iav": {
      "post": {
        "summary": "Add bank account with IAV",
        "description": "Add a new bank account with IAV",
        "operationId": "post-bank-iav",
        "tags": [
          "Bank Account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "institution_id",
                  "username",
                  "password"
                ],
                "properties": {
                  "institution_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Institution id returned from the institutions endpoint"
                  },
                  "username": {
                    "type": "string",
                    "description": "Username for bank login",
                    "default": "checkbook_test"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for bank login",
                    "default": "checkbook_good"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a list of bank accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for account"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the bank account"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Account creation timestamp"
                    },
                    "routing": {
                      "type": "string",
                      "description": "Routing number"
                    },
                    "account": {
                      "type": "string",
                      "description": "Last 4 digits of account number"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "VERIFIED",
                        "DEPOSIT_ONLY"
                      ],
                      "description": "Current status of the account (PENDING, VERIFIED, DEPOSIT_ONLY)"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CHECKING",
                        "SAVINGS",
                        "BUSINESS"
                      ],
                      "description": "Account type (CHECKING, SAVINGS, BUSINESS)"
                    },
                    "billing": {
                      "type": "boolean",
                      "description": "Indicates the billing account"
                    },
                    "default": {
                      "type": "boolean",
                      "description": "Indicates the default debit/credit account"
                    },
                    "balance": {
                      "type": "number",
                      "format": "float",
                      "description": "Indicates the current amount left in the account's balance (only for prefunded accounts)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "accounts": [
                        {
                          "account": "-8076",
                          "name": "Test Checking",
                          "routing": "021000021"
                        },
                        {
                          "account": "-7707",
                          "name": "Test Savings",
                          "routing": "021000021"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bank/iav/plaid": {
      "post": {
        "summary": "Retrieve bank account(s) with Plaid token",
        "description": "Retrieve the bank account(s) associated with the Plaid token",
        "operationId": "post-bank-plaid",
        "tags": [
          "Bank Account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "processor_token"
                ],
                "properties": {
                  "processor_token": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The Checkbook processor_token issued by Plaid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a list of bank accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "routing": {
                      "type": "string",
                      "description": "Routing number"
                    },
                    "account": {
                      "type": "string",
                      "description": "Last 4 digits of account number"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of Bank"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "accounts": [
                        {
                          "account": "-8076",
                          "name": "Test Checking",
                          "routing": "021000021"
                        },
                        {
                          "account": "-7707",
                          "name": "Test Savings",
                          "routing": "021000021"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bank/release": {
      "post": {
        "summary": "Release micro-deposits",
        "description": "Release the micro-deposits for a bank account",
        "operationId": "post-bank-release",
        "tags": [
          "Bank Account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account"
                ],
                "properties": {
                  "account": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The id of the bank account to release the micro-deposits for"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bank/verify": {
      "post": {
        "summary": "Verify micro-deposits",
        "description": "Verify the micro-deposits for a bank account",
        "operationId": "post-bank-verify",
        "tags": [
          "Bank Account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount_1",
                  "amount_2"
                ],
                "properties": {
                  "amount_1": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Amount of first micro-deposit",
                    "default": 0.07
                  },
                  "amount_2": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Amount of second micro-deposit",
                    "default": 0.15
                  },
                  "account": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bank": {
      "post": {
        "summary": "Add bank account",
        "description": "Add a new bank account",
        "operationId": "post-bank",
        "tags": [
          "Bank Account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "routing",
                  "account",
                  "type"
                ],
                "properties": {
                  "routing": {
                    "type": "string",
                    "description": "Routing number",
                    "default": "021000021"
                  },
                  "account": {
                    "type": "string",
                    "description": "Account number",
                    "default": "12340000"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CHECKING",
                      "SAVINGS",
                      "BUSINESS"
                    ],
                    "description": "Account type",
                    "default": "CHECKING"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the new bank account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for account"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the bank account"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Account creation timestamp"
                    },
                    "routing": {
                      "type": "string",
                      "description": "Routing number"
                    },
                    "account": {
                      "type": "string",
                      "description": "Last 4 digits of account number"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "VERIFIED",
                        "DEPOSIT_ONLY"
                      ],
                      "description": "Current status of the account (PENDING, VERIFIED, DEPOSIT_ONLY)"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CHECKING",
                        "SAVINGS",
                        "BUSINESS"
                      ],
                      "description": "Account type (CHECKING, SAVINGS, BUSINESS)"
                    },
                    "billing": {
                      "type": "boolean",
                      "description": "Indicates the billing account"
                    },
                    "default": {
                      "type": "boolean",
                      "description": "Indicates the default debit/credit account"
                    },
                    "balance": {
                      "type": "number",
                      "format": "float",
                      "description": "Indicates the current amount left in the account's balance (only for prefunded accounts)"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "account": "0000",
                      "billing": false,
                      "date": "2019-11-01 21:08:48",
                      "default": false,
                      "id": "40084f91e9024abd895be368413fc7bf",
                      "name": null,
                      "routing": "021000021",
                      "status": "DEPOSIT_ONLY",
                      "type": "CHECKING"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get bank accounts",
        "description": "Return the bank acccounts",
        "operationId": "get-banks",
        "tags": [
          "Bank Account"
        ],
        "responses": {
          "200": {
            "description": "List all the bank accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "banks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for account"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the bank account"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Account creation timestamp"
                          },
                          "routing": {
                            "type": "string",
                            "description": "Routing number"
                          },
                          "account": {
                            "type": "string",
                            "description": "Last 4 digits of account number"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "PENDING",
                              "VERIFIED",
                              "DEPOSIT_ONLY"
                            ],
                            "description": "Current status of the account (PENDING, VERIFIED, DEPOSIT_ONLY)"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "CHECKING",
                              "SAVINGS",
                              "BUSINESS"
                            ],
                            "description": "Account type (CHECKING, SAVINGS, BUSINESS)"
                          },
                          "billing": {
                            "type": "boolean",
                            "description": "Indicates the billing account"
                          },
                          "default": {
                            "type": "boolean",
                            "description": "Indicates the default debit/credit account"
                          },
                          "balance": {
                            "type": "number",
                            "format": "float",
                            "description": "Indicates the current amount left in the account's balance (only for prefunded accounts)"
                          }
                        }
                      },
                      "description": "List of bank accounts"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "banks": [
                        {
                          "account": "0000",
                          "billing": true,
                          "date": "2017-02-22 06:33:19",
                          "default": true,
                          "id": "efdbaaaa17b244abba084e6c2ccfc990",
                          "name": "NULL",
                          "routing": "021000021",
                          "status": "VERIFIED",
                          "type": "BUSINESS"
                        },
                        {
                          "account": "1111",
                          "billing": false,
                          "date": "2017-07-19 07:44:28",
                          "default": false,
                          "id": "c008408b81c14dc2a01987f201291c28",
                          "name": null,
                          "routing": "021000021",
                          "status": "VERIFIED",
                          "type": "CHECKING"
                        }
                      ],
                      "page": 1,
                      "pages": 1,
                      "total": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bank/institutions": {
      "get": {
        "summary": "Get institutions",
        "description": "Return a list of our supported institutions for IAV",
        "operationId": "get-bank-institutions",
        "tags": [
          "Bank Account"
        ],
        "responses": {
          "200": {
            "description": "List all the supported institutions for IAV",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "institutions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for institution"
                          },
                          "name": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Institution name"
                          },
                          "login_form": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "recipient"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "enum": [
                                    "username",
                                    "passcode",
                                    "password"
                                  ],
                                  "description": "Field name"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "TEXT",
                                    "PASSWORD"
                                  ],
                                  "description": "Field type"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Field description"
                                }
                              }
                            },
                            "minItems": 2,
                            "maxItems": 3,
                            "description": "Fields for the login form"
                          }
                        }
                      },
                      "description": "List of institutions for IAV"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "institutions": [
                        {
                          "id": "1e23ab0394ff4f20a51d52c5093c7343",
                          "login_form": [
                            {
                              "description": null,
                              "name": "username",
                              "type": "TEXT"
                            },
                            {
                              "description": null,
                              "name": "passcode",
                              "type": "PASSWORD"
                            }
                          ],
                          "name": "121 Financial Credit Union"
                        },
                        {
                          "id": "c3de36bf8c1e4e5780b841d05f9cc185",
                          "login_form": [
                            {
                              "description": null,
                              "name": "username",
                              "type": "TEXT"
                            },
                            {
                              "description": null,
                              "name": "passcode",
                              "type": "PASSWORD"
                            }
                          ],
                          "name": "1st Community Bank (TX)"
                        },
                        {
                          "id": "b6c6b21335124f24943cf4d1e02d0ac6",
                          "login_form": [
                            {
                              "description": null,
                              "name": "username",
                              "type": "TEXT"
                            },
                            {
                              "description": null,
                              "name": "passcode",
                              "type": "PASSWORD"
                            }
                          ],
                          "name": "21st Century Bank"
                        },
                        {
                          "id": "612f4919c2b74158ba5cd46e406e401d",
                          "login_form": [
                            {
                              "description": null,
                              "name": "username",
                              "type": "TEXT"
                            },
                            {
                              "description": null,
                              "name": "passcode",
                              "type": "PASSWORD"
                            }
                          ],
                          "name": "American Bank and Trust Company (OK)"
                        },
                        {
                          "id": "2ae47112205e44478d2e6a55fa06fb0d",
                          "login_form": [
                            {
                              "description": null,
                              "name": "username",
                              "type": "TEXT"
                            },
                            {
                              "description": null,
                              "name": "passcode",
                              "type": "PASSWORD"
                            }
                          ],
                          "name": "American Bank (PA)"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bank/{bank_id}": {
      "put": {
        "summary": "Update bank account",
        "description": "Update an existing bank account",
        "operationId": "put-bank",
        "tags": [
          "Bank Account"
        ],
        "parameters": [
          {
            "name": "bank_id",
            "in": "path",
            "required": true,
            "description": "The id of the bank account to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "skipped"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name for account",
                    "default": "Test Bank Account"
                  },
                  "billing": {
                    "type": "boolean",
                    "description": "Specification of billing account",
                    "default": true
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Specification of default account. Value will always be true in this case.",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove bank account",
        "description": "Remove the specified bank account",
        "operationId": "delete-bank",
        "tags": [
          "Bank Account"
        ],
        "parameters": [
          {
            "name": "bank_id",
            "in": "path",
            "required": true,
            "description": "The id of the bank account to remove",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/card": {
      "post": {
        "summary": "Add card",
        "description": "Add a new card",
        "operationId": "post-card",
        "tags": [
          "Debit Card"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "card_number",
                  "expiration_date"
                ],
                "properties": {
                  "card_number": {
                    "type": "string",
                    "description": "Card number",
                    "default": "4622941100000004"
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Expiration date (yyyy-mm)",
                    "default": "2022-01"
                  },
                  "cvv": {
                    "type": "string",
                    "description": "CVV code",
                    "default": "123"
                  },
                  "address": {
                    "type": "object",
                    "required": [
                      "line_1",
                      "city",
                      "state",
                      "zip"
                    ],
                    "properties": {
                      "line_1": {
                        "type": "string",
                        "description": "Street line 1",
                        "default": "1234 N. 1st Street"
                      },
                      "line_2": {
                        "type": "string",
                        "description": "Street line 2",
                        "default": "n°56"
                      },
                      "city": {
                        "type": "string",
                        "description": "City",
                        "default": "San Francisco"
                      },
                      "state": {
                        "type": "string",
                        "description": "State",
                        "default": "CA"
                      },
                      "zip": {
                        "type": "string",
                        "description": "Zip/postal code",
                        "default": "12345"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country",
                        "default": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the new card",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for card"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the card"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Card creation timestamp"
                    },
                    "card_number": {
                      "type": "string",
                      "description": "Last 4 digits of card number"
                    },
                    "default": {
                      "type": "boolean",
                      "description": "Indicates the default card"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "card_number": "0004",
                      "date": "2019-06-03 13:37:41",
                      "default": false,
                      "id": "0ac44e5679964cb9bc7f97966dc56a73",
                      "name": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get cards",
        "description": "Return the cards",
        "operationId": "get-cards",
        "tags": [
          "Debit Card"
        ],
        "responses": {
          "200": {
            "description": "List all the cards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cards": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for card"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the card"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "Card creation timestamp"
                          },
                          "card_number": {
                            "type": "string",
                            "description": "Last 4 digits of card number"
                          },
                          "default": {
                            "type": "boolean",
                            "description": "Indicates the default card"
                          }
                        }
                      },
                      "description": "List of cards"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "cards": [
                        {
                          "card_number": "0004",
                          "date": "2019-06-03 13:37:41",
                          "default": false,
                          "id": "0ac44e5679964cb9bc7f97966dc56a73",
                          "name": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/card/{card_id}": {
      "put": {
        "summary": "Update card",
        "description": "Update the specified card",
        "operationId": "put-card",
        "tags": [
          "Debit Card"
        ],
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "required": true,
            "description": "The id of the card to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the card",
                    "default": "Test Card"
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Indicates the default card",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove card",
        "description": "Remove the specified card",
        "operationId": "delete-card",
        "tags": [
          "Debit Card"
        ],
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "required": true,
            "description": "The id of the card to remove",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/vcc": {
      "post": {
        "summary": "Add VCC",
        "description": "Add a new VCC",
        "operationId": "post-vcc",
        "tags": [
          "Virtual Credit Card"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "line_1": {
                        "type": "string",
                        "description": "Street line 1",
                        "default": "1234 N. 1st Street"
                      },
                      "city": {
                        "type": "string",
                        "description": "City",
                        "default": "San Francisco"
                      },
                      "state": {
                        "type": "string",
                        "description": "State",
                        "default": "CA"
                      },
                      "zip": {
                        "type": "string",
                        "description": "Zip/postal code",
                        "default": "12345"
                      }
                    }
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number of the recipient",
                    "maxLength": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the new VCC",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for VCC"
                    },
                    "card_number": {
                      "type": "string",
                      "description": "Card number"
                    },
                    "expiration_date": {
                      "type": "string",
                      "format": "date",
                      "description": "VCC expiration date"
                    },
                    "cvv": {
                      "type": "string",
                      "description": "CVV code"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "card_number": "4622941100000004",
                      "expiration_date": "2021-10-14",
                      "date": "2019-06-03 13:37:41",
                      "id": "0ac44e5679964cb9bc7f97966dc56a73"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get VCCs",
        "description": "Return the VCCs",
        "operationId": "get-vccs",
        "tags": [
          "Virtual Credit Card"
        ],
        "responses": {
          "200": {
            "description": "List all the VCCs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vccs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for VCC"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the VCC"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "VCC creation timestamp"
                          },
                          "card_number": {
                            "type": "string",
                            "description": "Last 4 digits of VCC"
                          },
                          "expiration_date": {
                            "type": "string",
                            "format": "date",
                            "description": "VCC expiration date"
                          },
                          "default": {
                            "type": "boolean",
                            "description": "Indicates the default VCC"
                          },
                          "balance": {
                            "type": "number",
                            "format": "float",
                            "description": "Indicates the current amount left on the virtual credit card"
                          }
                        }
                      },
                      "description": "List of VCCs"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "cards": [
                        {
                          "card_number": "0004",
                          "expiration_date": "2021-10-14",
                          "date": "2019-06-03 13:37:41",
                          "default": false,
                          "id": "0ac44e5679964cb9bc7f97966dc56a73",
                          "name": null,
                          "balance": "10.00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/vcc/{vcc_id}/transaction": {
      "get": {
        "summary": "Get VCC transactions",
        "description": "Get the transactions for the specified VCC",
        "operationId": "get-vcc-transaction",
        "tags": [
          "Virtual Credit Card"
        ],
        "parameters": [
          {
            "name": "vcc_id",
            "in": "path",
            "required": true,
            "description": "The id of the VCC to get the transactions for",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of VCC transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_ts": {
                            "type": "string",
                            "format": "date",
                            "description": "Transaction timestamp"
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "description": "Transaction number"
                          },
                          "description": {
                            "type": "string",
                            "description": "Transaction description"
                          }
                        }
                      },
                      "description": "List of VCC transactions"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "pages": {
                      "type": "integer",
                      "description": "Total number of pages"
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of results"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "checks": [
                        {
                          "amount": 5,
                          "created_ts": "2019-10-13 19:37:41",
                          "description": "Test VCC transaction"
                        }
                      ],
                      "page": 1,
                      "pages": 1,
                      "total": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/vcc/{vcc_id}": {
      "put": {
        "summary": "Update VCC",
        "description": "Update the specified VCC",
        "operationId": "put-vcc",
        "tags": [
          "Virtual Credit Card"
        ],
        "parameters": [
          {
            "name": "vcc_id",
            "in": "path",
            "required": true,
            "description": "The id of the VCC to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the VCC",
                    "default": "Test VCC"
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Indicates the default VCC",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove VCC",
        "description": "Remove the specified VCC",
        "operationId": "delete-vcc",
        "tags": [
          "Virtual Credit Card"
        ],
        "parameters": [
          {
            "name": "vcc_id",
            "in": "path",
            "required": true,
            "description": "The id of the VCC to remove",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Create user",
        "description": "Create a new marketplace user",
        "operationId": "post-user",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_id",
                  "name"
                ],
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "Email as unique identifier for new user (max length 80)",
                    "minLength": 2,
                    "maxLength": 80,
                    "default": "jsmith@example.com"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of user (max length 180)",
                    "minLength": 2,
                    "maxLength": 180,
                    "default": "John Smith"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for user"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Specific user_id provided by the marketplace owner"
                    },
                    "key": {
                      "type": "string",
                      "description": "Publishable key of the user"
                    },
                    "secret": {
                      "type": "string",
                      "description": "Secret key of the user"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "3fcceb559b7e4824bed339e7d2f6bf52",
                      "key": "f05754535e074651ac9d7421ce0d5a4a",
                      "secret": "eEi8WABBa6QAwlm1JBRq6YaS0jc08h",
                      "user_id": "jsmith@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get user",
        "description": "Get existing user information",
        "operationId": "get-user",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Returns the user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "first_name": {
                          "type": "string",
                          "description": "User first name",
                          "default": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "description": "User last name",
                          "default": "Smith"
                        },
                        "business_name": {
                          "type": "string",
                          "description": "Business name",
                          "default": "Widgets Inc."
                        },
                        "password": {
                          "type": "string",
                          "description": "User password"
                        },
                        "phone": {
                          "type": "string",
                          "description": "Phone number"
                        },
                        "dob": {
                          "type": "string",
                          "description": "User's date of birth (yyyy-mm-dd)",
                          "default": "1980-01-01"
                        },
                        "ssn": {
                          "type": "string",
                          "description": "Social Security Number",
                          "default": "00000000"
                        },
                        "check_number": {
                          "type": "integer",
                          "description": "Number to be used for the next check",
                          "default": 1001
                        },
                        "invoice_number": {
                          "type": "integer",
                          "description": "Number to be used for the next invoice",
                          "default": 5001
                        },
                        "entity_type": {
                          "type": "string",
                          "description": "One of a standard set of values that indicate the Entity formation type"
                        },
                        "industry_type": {
                          "type": "string",
                          "description": "One of a standard set of values that indicate the Business industry type"
                        },
                        "document": {
                          "type": "string",
                          "description": "One of a standard set of values that indicate the Identity Document Type"
                        },
                        "number": {
                          "type": "string",
                          "description": "Document Number. Minimum 5 characters and no special characters are allowed"
                        },
                        "issuer": {
                          "type": "string",
                          "description": "Issuer of the Document"
                        },
                        "issue_date": {
                          "type": "string",
                          "description": "String based on ISO-8601 for specifying the date of issuance for the document. YYYY-MM-DD"
                        },
                        "expiration_date": {
                          "type": "string",
                          "description": "String based on ISO-8601 for specifying the date of expiration for the document. YYYY-MM-DD"
                        },
                        "business_operation": {
                          "type": "string",
                          "description": "One of a standard set of values that indicate the Business Entity's Operations in the USA."
                        },
                        "origin_country": {
                          "type": "string",
                          "description": "3-character country code following the ISO_3166-1 standards. (Ex. USA)"
                        },
                        "origin_state": {
                          "type": "string",
                          "description": "State / Province. Use state codes for USA, CANADA, MEXICO and SPAIN. For other countries it's free text up to 25 alphanumeric characters. Use the USPS for USA States."
                        },
                        "origin_date": {
                          "type": "string",
                          "description": "String based on ISO-8601 for specifying the origin date of the entity. YYYY-MM-DD"
                        }
                      }
                    },
                    "merchant": {
                      "type": "object",
                      "properties": {
                        "website": {
                          "type": "string",
                          "description": "Company website",
                          "default": "http://www.example.com"
                        },
                        "tax_id": {
                          "type": "string",
                          "description": "Company",
                          "default": "00000000"
                        },
                        "industry": {
                          "type": "string",
                          "description": "Industry sector"
                        },
                        "legal_firstname": {
                          "type": "string",
                          "description": "Principal officer first name",
                          "default": "John"
                        },
                        "legal_lastname": {
                          "type": "string",
                          "description": "Principal officer last name",
                          "default": "Smith"
                        },
                        "incorporation_date": {
                          "type": "string",
                          "description": "Business incorporation or formation date (yyyy-mm-dd)",
                          "default": "1980-01-01"
                        },
                        "address": {
                          "type": "object",
                          "required": [
                            "line_1",
                            "city",
                            "state",
                            "zip"
                          ],
                          "properties": {
                            "line_1": {
                              "type": "string",
                              "description": "Street line 1",
                              "default": "1234 N. 1st Street"
                            },
                            "line_2": {
                              "type": "string",
                              "description": "Street line 2",
                              "default": "n°56"
                            },
                            "city": {
                              "type": "string",
                              "description": "City",
                              "default": "San Francisco"
                            },
                            "state": {
                              "type": "string",
                              "description": "State",
                              "default": "CA"
                            },
                            "zip": {
                              "type": "string",
                              "description": "Zip/postal code",
                              "default": "12345"
                            },
                            "country": {
                              "type": "string",
                              "description": "Country",
                              "default": "US"
                            }
                          },
                          "description": "Company address"
                        },
                        "principal_address": {
                          "type": "object",
                          "required": [
                            "line_1",
                            "city",
                            "state",
                            "zip"
                          ],
                          "properties": {
                            "line_1": {
                              "type": "string",
                              "description": "Street line 1",
                              "default": "1234 N. 1st Street"
                            },
                            "line_2": {
                              "type": "string",
                              "description": "Street line 2",
                              "default": "n°56"
                            },
                            "city": {
                              "type": "string",
                              "description": "City",
                              "default": "San Francisco"
                            },
                            "state": {
                              "type": "string",
                              "description": "State",
                              "default": "CA"
                            },
                            "zip": {
                              "type": "string",
                              "description": "Zip/postal code",
                              "default": "12345"
                            },
                            "country": {
                              "type": "string",
                              "description": "Country",
                              "default": "US"
                            }
                          },
                          "description": "Principal officer address"
                        },
                        "principal_citizenship_status": {
                          "type": "string",
                          "description": "One of a standard set of values that indicate the citizenship status (us_citizen, resident, non_resident)",
                          "default": "us_citizen"
                        },
                        "principal_occupation": {
                          "type": "string",
                          "description": "One of a standard set of values that indicate customer occupation"
                        }
                      }
                    },
                    "brand": {
                      "type": "object",
                      "properties": {
                        "check": {
                          "type": "object",
                          "properties": {
                            "logo": {
                              "type": "string",
                              "description": "Base64 encoded company logo",
                              "default": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
                            },
                            "color": {
                              "type": "object",
                              "properties": {
                                "primary": {
                                  "type": "string",
                                  "description": "Primary color scheme",
                                  "default": "#000000"
                                },
                                "secondary": {
                                  "type": "string",
                                  "description": "Secondary color scheme",
                                  "default": "#ffffff"
                                }
                              }
                            }
                          }
                        },
                        "button": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "type": "object",
                              "properties": {
                                "primary": {
                                  "type": "string",
                                  "description": "Primary color scheme",
                                  "default": "#000000"
                                },
                                "secondary": {
                                  "type": "string",
                                  "description": "Secondary color scheme",
                                  "default": "#ffffff"
                                }
                              }
                            }
                          }
                        },
                        "logo": {
                          "type": "string",
                          "description": "Base64 encoded company logo",
                          "default": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
                        },
                        "reply_to": {
                          "type": "string",
                          "writeOnly": true,
                          "description": "Email reply to address",
                          "default": "jsmith@example.com"
                        },
                        "footer": {
                          "type": "string",
                          "description": "Email footer",
                          "default": "Test email footer"
                        },
                        "slogan": {
                          "type": "string",
                          "description": "Email slogan",
                          "default": "Test email slogan"
                        }
                      }
                    },
                    "bank": {
                      "type": "object",
                      "writeOnly": true,
                      "properties": {
                        "default": {
                          "type": "string",
                          "description": "Default bank account id (if user has multiple bank accounts)"
                        },
                        "billing": {
                          "type": "string",
                          "description": "Billing bank account id (if user has multiple bank accounts)"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "brand": {
                        "logo": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=",
                        "check": {
                          "logo": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=",
                          "color": {
                            "primary": "#000000",
                            "secondary": "#ffffff"
                          }
                        },
                        "button": {
                          "color": {
                            "primary": "#000000",
                            "secondary": "#ffffff"
                          }
                        },
                        "reply_to": null,
                        "slogan": "",
                        "footer": ""
                      },
                      "merchant": {
                        "address": {
                          "city": "San Mateo",
                          "country": "US",
                          "line_1": "1500 Fashion Island Boulevard Suite 103",
                          "line_2": "",
                          "state": "CA",
                          "zip": "94402"
                        },
                        "incorporation_date": null,
                        "industry": null,
                        "legal_firstname": null,
                        "legal_lastname": null,
                        "principal_address": {
                          "city": null,
                          "country": null,
                          "line_1": null,
                          "line_2": null,
                          "state": null,
                          "zip": null
                        },
                        "principal_citizenship_status": null,
                        "principal_occupation": null,
                        "tax_id": "000000000",
                        "website": "https://checkbook.io"
                      },
                      "user": {
                        "dob": "2015-01-01 00:00:00",
                        "first_name": "Checkbook",
                        "last_name": "Demo",
                        "invoice_number": 1484,
                        "check_number": 9349,
                        "business_name": "Checkbook Inc.",
                        "phone": null,
                        "ssn": "0000"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "description": "Update existing user information",
        "operationId": "put-user",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "description": "User first name",
                        "default": "John"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "User last name",
                        "default": "Smith"
                      },
                      "business_name": {
                        "type": "string",
                        "description": "Business name",
                        "default": "Widgets Inc."
                      },
                      "password": {
                        "type": "string",
                        "description": "User password"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Phone number"
                      },
                      "dob": {
                        "type": "string",
                        "description": "User's date of birth (yyyy-mm-dd)",
                        "default": "1980-01-01"
                      },
                      "ssn": {
                        "type": "string",
                        "description": "Social Security Number",
                        "default": "00000000"
                      },
                      "check_number": {
                        "type": "integer",
                        "description": "Number to be used for the next check",
                        "default": 1001
                      },
                      "invoice_number": {
                        "type": "integer",
                        "description": "Number to be used for the next invoice",
                        "default": 5001
                      },
                      "entity_type": {
                        "type": "string",
                        "description": "One of a standard set of values that indicate the Entity formation type"
                      },
                      "industry_type": {
                        "type": "string",
                        "description": "One of a standard set of values that indicate the Business industry type"
                      },
                      "document": {
                        "type": "string",
                        "description": "One of a standard set of values that indicate the Identity Document Type"
                      },
                      "number": {
                        "type": "string",
                        "description": "Document Number. Minimum 5 characters and no special characters are allowed"
                      },
                      "issuer": {
                        "type": "string",
                        "description": "Issuer of the Document"
                      },
                      "issue_date": {
                        "type": "string",
                        "description": "String based on ISO-8601 for specifying the date of issuance for the document. YYYY-MM-DD"
                      },
                      "expiration_date": {
                        "type": "string",
                        "description": "String based on ISO-8601 for specifying the date of expiration for the document. YYYY-MM-DD"
                      },
                      "business_operation": {
                        "type": "string",
                        "description": "One of a standard set of values that indicate the Business Entity's Operations in the USA."
                      },
                      "origin_country": {
                        "type": "string",
                        "description": "3-character country code following the ISO_3166-1 standards. (Ex. USA)"
                      },
                      "origin_state": {
                        "type": "string",
                        "description": "State / Province. Use state codes for USA, CANADA, MEXICO and SPAIN. For other countries it's free text up to 25 alphanumeric characters. Use the USPS for USA States."
                      },
                      "origin_date": {
                        "type": "string",
                        "description": "String based on ISO-8601 for specifying the origin date of the entity. YYYY-MM-DD"
                      }
                    }
                  },
                  "merchant": {
                    "type": "object",
                    "properties": {
                      "website": {
                        "type": "string",
                        "description": "Company website",
                        "default": "http://www.example.com"
                      },
                      "tax_id": {
                        "type": "string",
                        "description": "Company",
                        "default": "00000000"
                      },
                      "industry": {
                        "type": "string",
                        "description": "Industry sector"
                      },
                      "legal_firstname": {
                        "type": "string",
                        "description": "Principal officer first name",
                        "default": "John"
                      },
                      "legal_lastname": {
                        "type": "string",
                        "description": "Principal officer last name",
                        "default": "Smith"
                      },
                      "incorporation_date": {
                        "type": "string",
                        "description": "Business incorporation or formation date (yyyy-mm-dd)",
                        "default": "1980-01-01"
                      },
                      "address": {
                        "type": "object",
                        "required": [
                          "line_1",
                          "city",
                          "state",
                          "zip"
                        ],
                        "properties": {
                          "line_1": {
                            "type": "string",
                            "description": "Street line 1",
                            "default": "1234 N. 1st Street"
                          },
                          "line_2": {
                            "type": "string",
                            "description": "Street line 2",
                            "default": "n°56"
                          },
                          "city": {
                            "type": "string",
                            "description": "City",
                            "default": "San Francisco"
                          },
                          "state": {
                            "type": "string",
                            "description": "State",
                            "default": "CA"
                          },
                          "zip": {
                            "type": "string",
                            "description": "Zip/postal code",
                            "default": "12345"
                          },
                          "country": {
                            "type": "string",
                            "description": "Country",
                            "default": "US"
                          }
                        },
                        "description": "Company address"
                      },
                      "principal_address": {
                        "type": "object",
                        "required": [
                          "line_1",
                          "city",
                          "state",
                          "zip"
                        ],
                        "properties": {
                          "line_1": {
                            "type": "string",
                            "description": "Street line 1",
                            "default": "1234 N. 1st Street"
                          },
                          "line_2": {
                            "type": "string",
                            "description": "Street line 2",
                            "default": "n°56"
                          },
                          "city": {
                            "type": "string",
                            "description": "City",
                            "default": "San Francisco"
                          },
                          "state": {
                            "type": "string",
                            "description": "State",
                            "default": "CA"
                          },
                          "zip": {
                            "type": "string",
                            "description": "Zip/postal code",
                            "default": "12345"
                          },
                          "country": {
                            "type": "string",
                            "description": "Country",
                            "default": "US"
                          }
                        },
                        "description": "Principal officer address"
                      },
                      "principal_citizenship_status": {
                        "type": "string",
                        "description": "One of a standard set of values that indicate the citizenship status (us_citizen, resident, non_resident)",
                        "default": "us_citizen"
                      },
                      "principal_occupation": {
                        "type": "string",
                        "description": "One of a standard set of values that indicate customer occupation"
                      }
                    }
                  },
                  "brand": {
                    "type": "object",
                    "properties": {
                      "check": {
                        "type": "object",
                        "properties": {
                          "logo": {
                            "type": "string",
                            "description": "Base64 encoded company logo",
                            "default": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
                          },
                          "color": {
                            "type": "object",
                            "properties": {
                              "primary": {
                                "type": "string",
                                "description": "Primary color scheme",
                                "default": "#000000"
                              },
                              "secondary": {
                                "type": "string",
                                "description": "Secondary color scheme",
                                "default": "#ffffff"
                              }
                            }
                          }
                        }
                      },
                      "button": {
                        "type": "object",
                        "properties": {
                          "color": {
                            "type": "object",
                            "properties": {
                              "primary": {
                                "type": "string",
                                "description": "Primary color scheme",
                                "default": "#000000"
                              },
                              "secondary": {
                                "type": "string",
                                "description": "Secondary color scheme",
                                "default": "#ffffff"
                              }
                            }
                          }
                        }
                      },
                      "logo": {
                        "type": "string",
                        "description": "Base64 encoded company logo",
                        "default": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
                      },
                      "reply_to": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Email reply to address",
                        "default": "jsmith@example.com"
                      },
                      "footer": {
                        "type": "string",
                        "description": "Email footer",
                        "default": "Test email footer"
                      },
                      "slogan": {
                        "type": "string",
                        "description": "Email slogan",
                        "default": "Test email slogan"
                      }
                    }
                  },
                  "developer": {
                    "type": "object",
                    "properties": {
                      "webhook_uri": {
                        "type": "string",
                        "description": "Webhook URI (max length 256)",
                        "maxLength": 256
                      }
                    }
                  },
                  "payment": {
                    "type": "object",
                    "properties": {
                      "expiration": {
                        "type": "number",
                        "format": "integer",
                        "minimum": 10,
                        "maximum": 720,
                        "description": "Payment expiration"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/list": {
      "get": {
        "summary": "Get users",
        "description": "Return the marketplace users",
        "operationId": "get-users",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page (10, 25, 50)",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                10,
                25,
                50
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "+DATE",
                "-DATE",
                "+USER_ID",
                "-USER_ID"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for user"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "User creation timestamp"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the user"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Specific user_id provided by the marketplace owner"
                          },
                          "publishable_key": {
                            "type": "string",
                            "description": "Publishable key of the user"
                          },
                          "secret_key": {
                            "type": "string",
                            "description": "Redacted secret key of the user"
                          }
                        }
                      },
                      "description": "List of users"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "pages": {
                      "type": "integer",
                      "description": "Total number of pages"
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of results"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "users": [
                        {
                          "date": "2019-11-01 18:44:07",
                          "id": "15714325b7564acc9d22129740f8c7f8",
                          "name": "John Smith",
                          "publishable_key": "f05754535e074651ac9d7421ce0d5a4a",
                          "secret_key": "eEi8*****c08h",
                          "user_id": "jsmith@example.com"
                        },
                        {
                          "date": "2019-10-30 10:52:55",
                          "id": "4871b3dbca5042d1be089f93662c3f99",
                          "name": "John Doe",
                          "publishable_key": "d0de8df7e78345be83a6073c0fc68221",
                          "secret_key": "tZjF*****Xswy",
                          "user_id": "jdoe@example.com"
                        }
                      ],
                      "page": 1,
                      "pages": 1,
                      "total": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}": {
      "delete": {
        "summary": "Delete user",
        "description": "Delete the specified marketplace user",
        "operationId": "delete-user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "The id of the marketplace user to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/signature": {
      "post": {
        "summary": "Add signature",
        "description": "Add signature",
        "operationId": "post-user-signature",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "signature"
                ],
                "properties": {
                  "signature": {
                    "type": "string",
                    "description": "Base64 encoded PNG of user’s signature",
                    "default": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}/generate_keys": {
      "post": {
        "summary": "Generate keys",
        "description": "Generate API keys for the marketplace user",
        "operationId": "generate-keys",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "The id of the marketplace user to generate API keys for",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the new API keys",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "API Key"
                    },
                    "secret": {
                      "type": "string",
                      "description": "API Secret"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "key": "d6aa2703655f4ba2af2a56202961ca86",
                      "secret": "dXbCgzYBMibj8ZwuQMd2NXr6rtvjZ8"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/directory": {
      "get": {
        "summary": "Get directory",
        "description": "Return the directory",
        "operationId": "get-directory",
        "tags": [
          "Directory"
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Directories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "object",
                            "properties": {
                              "line_1": {
                                "type": "string",
                                "description": "Address line 1"
                              },
                              "line_2": {
                                "type": "string",
                                "description": "Address line 2"
                              },
                              "city": {
                                "type": "string",
                                "description": "City"
                              },
                              "state": {
                                "type": "string",
                                "description": "State"
                              },
                              "zip": {
                                "type": "string",
                                "description": "Zipcode"
                              },
                              "country": {
                                "type": "string",
                                "description": "Country"
                              }
                            }
                          },
                          "accounts": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Directory account id"
                              },
                              "number": {
                                "type": "number",
                                "description": "Directory account number"
                              },
                              "name": {
                                "type": "string",
                                "description": "Directory account number"
                              },
                              "type": {
                                "type": "string",
                                "description": "Directory account type"
                              }
                            }
                          },
                          "id": {
                            "type": "string",
                            "description": "Directory id"
                          },
                          "name": {
                            "type": "string",
                            "description": "Directory name"
                          },
                          "email": {
                            "type": "string",
                            "description": "Directory email"
                          }
                        }
                      },
                      "description": "List of Directories"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "pages": {
                      "type": "integer",
                      "description": "Total number of pages"
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of results"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "entries": {
                        "items": {
                          "address": {
                            "line_1": "1234 testing ave",
                            "city": "San Mateo",
                            "state": "CA",
                            "country": "United States"
                          },
                          "accounts": {
                            "id": "123456",
                            "number": 123,
                            "name": "test",
                            "type": "CARD"
                          },
                          "id": "efdbaaaa17b244abba084e6c2ccfc990",
                          "name": 5,
                          "email": "testing@checkbook.io"
                        }
                      },
                      "page": 1,
                      "pages": 1,
                      "total": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a directory",
        "description": "Create a new directory item",
        "operationId": "create-directory",
        "tags": [
          "Directory"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "address"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of recipient",
                    "default": "Widgets Inc."
                  },
                  "email": {
                    "type": "string",
                    "description": "Email/id of recipient",
                    "default": "testing@checkbook.io"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "line_1": {
                        "type": "string",
                        "description": "Address line 1"
                      },
                      "line_2": {
                        "type": "string",
                        "description": "Address line 2"
                      },
                      "city": {
                        "type": "string",
                        "description": "City"
                      },
                      "state": {
                        "type": "string",
                        "description": "State"
                      },
                      "zip": {
                        "type": "string",
                        "description": "Zipcode"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create directory response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Directory id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Directory name"
                    },
                    "email": {
                      "type": "string",
                      "description": "Directory email"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "line_1": {
                          "type": "string"
                        },
                        "line_2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Directory create response"
                },
                "examples": {
                  "response": {
                    "value": {
                      "address": {
                        "line_1": "1234 testing ave",
                        "city": "San Mateo",
                        "state": "CA",
                        "country": "United States"
                      },
                      "id": "efdbaaaa17b244abba084e6c2ccfc990",
                      "name": 5,
                      "email": "testing@checkbook.io"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/directory/{directory_id}": {
      "put": {
        "summary": "Update a directory",
        "description": "Update a directory item",
        "operationId": "update-directory",
        "tags": [
          "Directory"
        ],
        "parameters": [
          {
            "name": "directory_id",
            "in": "path",
            "required": true,
            "description": "The id of the directory",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "address"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of recipient",
                    "default": "Widgets Inc."
                  },
                  "email": {
                    "type": "string",
                    "description": "Email/id of recipient",
                    "default": "testing@checkbook.io"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "line_1": {
                        "type": "string",
                        "description": "Address line 1"
                      },
                      "line_2": {
                        "type": "string",
                        "description": "Address line 2"
                      },
                      "city": {
                        "type": "string",
                        "description": "City"
                      },
                      "state": {
                        "type": "string",
                        "description": "State"
                      },
                      "zip": {
                        "type": "string",
                        "description": "Zipcode"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update directory response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Directory id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Directory name"
                    },
                    "email": {
                      "type": "string",
                      "description": "Directory email"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "line_1": {
                          "type": "string"
                        },
                        "line_2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Directory create response"
                },
                "examples": {
                  "response": {
                    "value": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/directory/delete": {
      "post": {
        "summary": "Delete Directory",
        "description": "Delete a specified directory",
        "operationId": "delete-directory",
        "tags": [
          "Directory"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "directory_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty JSON object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Your request is invalid)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Your API key is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (The specified resource was not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error (We had a problem with our server. Try again later.)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key to authorize requests. Use `d6aa2703655f4ba2af2a56202961ca86:dXbCgzYBMibj8ZwuQMd2NXr6rtvjZ8`."
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "ErrorMoreInfo": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "more_info": {
            "type": "object"
          }
        }
      },
      "EmptyObject": {
        "type": "object"
      },
      "Address": {
        "type": "object",
        "required": [
          "line_1",
          "city",
          "state",
          "zip"
        ],
        "properties": {
          "line_1": {
            "type": "string",
            "description": "Street line 1",
            "default": "1234 N. 1st Street"
          },
          "line_2": {
            "type": "string",
            "description": "Street line 2",
            "default": "n°56"
          },
          "city": {
            "type": "string",
            "description": "City",
            "default": "San Francisco"
          },
          "state": {
            "type": "string",
            "description": "State",
            "default": "CA"
          },
          "zip": {
            "type": "string",
            "description": "Zip/postal code",
            "default": "12345"
          },
          "country": {
            "type": "string",
            "description": "Country",
            "default": "US"
          }
        }
      },
      "AddressVCC": {
        "type": "object",
        "properties": {
          "line_1": {
            "type": "string",
            "description": "Street line 1",
            "default": "1234 N. 1st Street"
          },
          "city": {
            "type": "string",
            "description": "City",
            "default": "San Francisco"
          },
          "state": {
            "type": "string",
            "description": "State",
            "default": "CA"
          },
          "zip": {
            "type": "string",
            "description": "Zip/postal code",
            "default": "12345"
          }
        }
      },
      "DirectoryAddress": {
        "type": "object",
        "properties": {
          "line_1": {
            "type": "string",
            "description": "Address line 1"
          },
          "line_2": {
            "type": "string",
            "description": "Address line 2"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "zip": {
            "type": "string",
            "description": "Zipcode"
          },
          "country": {
            "type": "string",
            "description": "Country"
          }
        }
      },
      "DirectoryAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Directory account id"
          },
          "number": {
            "type": "number",
            "description": "Directory account number"
          },
          "name": {
            "type": "string",
            "description": "Directory account number"
          },
          "type": {
            "type": "string",
            "description": "Directory account type"
          }
        }
      },
      "Check": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for check"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Check creation timestamp"
          },
          "number": {
            "type": "string",
            "description": "Check number"
          },
          "description": {
            "type": "string",
            "description": "Check description"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Check amount"
          },
          "name": {
            "type": "string",
            "description": "Name of third party who received the check"
          },
          "image_uri": {
            "type": "string",
            "description": "URI where image of the check can be accessed"
          },
          "recipient": {
            "type": "string",
            "description": "Email/id or physical address of the check recipient"
          },
          "sender": {
            "type": "string",
            "description": "Email/id or physical address of the check sender"
          },
          "direction": {
            "type": "string",
            "enum": [
              "INCOMING",
              "OUTGOING"
            ],
            "description": "Check direction (INCOMING, OUTGOING)"
          },
          "status": {
            "type": "string",
            "enum": [
              "PAID",
              "IN_PROCESS",
              "UNPAID",
              "VOID",
              "EXPIRED",
              "PRINTED",
              "MAILED",
              "FAILED",
              "REFUNDED"
            ],
            "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, VOID, EXPIRED, PRINTED, MAILED, FAILED, REFUNDED)"
          },
          "remittance_advice": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Id of the record",
                  "maxLength": 32
                },
                "amount": {
                  "type": "number",
                  "format": "float",
                  "description": "Amount of the record"
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "Date of the record (yyyy-mm-dd)"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the record (max length 64)",
                  "maxLength": 64
                }
              }
            },
            "description": "List of the remittance records (if specified)"
          }
        }
      },
      "CheckPreview": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Base64 encoded check image"
          }
        }
      },
      "LockboxCheck": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for check"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Check creation timestamp"
          },
          "number": {
            "type": "string",
            "description": "Check number"
          },
          "description": {
            "type": "string",
            "description": "Check description"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Check amount"
          },
          "name": {
            "type": "string",
            "description": "Name of third party who received the check"
          },
          "recipient": {
            "type": "string",
            "description": "Email/id or physical address of the check recipient"
          },
          "sender": {
            "type": "string",
            "description": "Email/id or physical address of the check sender"
          },
          "direction": {
            "type": "string",
            "enum": [
              "INCOMING",
              "OUTGOING"
            ],
            "description": "Check direction (INCOMING, OUTGOING)"
          },
          "status": {
            "type": "string",
            "enum": [
              "UNPAID",
              "VOID",
              "APPROVED"
            ],
            "description": "Current status of the check (UNPAID, VOID, APPROVED)"
          },
          "remittance_advice": {
            "anyOf": [
              {
                "type": "string",
                "description": "Base64 encoded value of a CSV (max length 3990). We will convert the CSV into a list and there are no restrictions on the CSV content."
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the record",
                      "maxLength": 32
                    },
                    "amount": {
                      "type": "number",
                      "format": "float",
                      "description": "Amount of the record"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date of the record (yyyy-mm-dd)"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the record (max length 64)",
                      "maxLength": 64
                    }
                  }
                },
                "description": "List of the remittance records (will only appear on the mailed checks)"
              }
            ],
            "description": "Check remittance advice that can be specified either as a Base64 encoded value of a CSV (Option 1) or a list of the remittance records (Option 2)"
          }
        }
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for invoice"
          },
          "check_id": {
            "type": "string",
            "description": "Identifier for the check that paid the invoice"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Invoice creation timestamp"
          },
          "number": {
            "type": "string",
            "description": "Invoice number"
          },
          "description": {
            "type": "string",
            "description": "Invoice description"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Invoice amount"
          },
          "name": {
            "type": "string",
            "description": "Name of third party who received the invoice"
          },
          "recipient": {
            "type": "string",
            "description": "Email/id of the invoice recipient"
          },
          "sender": {
            "type": "string",
            "description": "Email/id of the invoice sender"
          },
          "direction": {
            "type": "string",
            "enum": [
              "INCOMING",
              "OUTGOING"
            ],
            "description": "Check direction (INCOMING, OUTGOING)"
          },
          "status": {
            "type": "string",
            "enum": [
              "PAID",
              "IN_PROCESS",
              "UNPAID",
              "CANCELED"
            ],
            "description": "Current status of the check (PAID, IN_PROCESS, UNPAID, CANCELED)"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for invoice"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Subscription creation timestamp"
          },
          "start_date": {
            "type": "string",
            "description": "Subscription start date (yyyy-mm-dd)"
          },
          "number": {
            "type": "string",
            "description": "Subscription number"
          },
          "type": {
            "type": "string",
            "enum": [
              "CHECK",
              "INVOICE"
            ],
            "description": "Type of the subscription (CHECK, INVOICE)"
          },
          "interval": {
            "type": "string",
            "enum": [
              "WEEKLY",
              "MONTHLY"
            ],
            "description": "How often the subscription will recur (WEEKLY, MONTHLY)"
          },
          "description": {
            "type": "string",
            "description": "Subscription description"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Subscription amount"
          },
          "name": {
            "type": "string",
            "description": "Name of third party who is receiving the check/invoice"
          },
          "recipient": {
            "type": "string",
            "description": "Email/id of the invoice recipient"
          },
          "sender": {
            "type": "string",
            "description": "Email/id of the invoice sender"
          },
          "account": {
            "type": "string",
            "description": "Identifier for the bank account attached to the subscription"
          },
          "duration": {
            "type": "integer",
            "description": "Number of times the subscription will recur (-1 indicates indefinite)"
          },
          "skipped": {
            "type": "array",
            "description": "List of skipped subscription indexes (e.g. [1] indicates the first subscription will be skipped)"
          },
          "direction": {
            "type": "string",
            "enum": [
              "INCOMING",
              "OUTGOING"
            ],
            "description": "Check direction (INCOMING, OUTGOING)"
          },
          "status": {
            "type": "string",
            "enum": [
              "IN_PROCESS",
              "CANCELED"
            ],
            "description": "Current status of the check (IN_PROCESS, CANCELED)"
          }
        }
      },
      "Bank": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for account"
          },
          "name": {
            "type": "string",
            "description": "Name of the bank account"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Account creation timestamp"
          },
          "routing": {
            "type": "string",
            "description": "Routing number"
          },
          "account": {
            "type": "string",
            "description": "Last 4 digits of account number"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "VERIFIED",
              "DEPOSIT_ONLY"
            ],
            "description": "Current status of the account (PENDING, VERIFIED, DEPOSIT_ONLY)"
          },
          "type": {
            "type": "string",
            "enum": [
              "CHECKING",
              "SAVINGS",
              "BUSINESS"
            ],
            "description": "Account type (CHECKING, SAVINGS, BUSINESS)"
          },
          "billing": {
            "type": "boolean",
            "description": "Indicates the billing account"
          },
          "default": {
            "type": "boolean",
            "description": "Indicates the default debit/credit account"
          },
          "balance": {
            "type": "number",
            "format": "float",
            "description": "Indicates the current amount left in the account's balance (only for prefunded accounts)"
          }
        }
      },
      "BankPlaid": {
        "type": "object",
        "properties": {
          "routing": {
            "type": "string",
            "description": "Routing number"
          },
          "account": {
            "type": "string",
            "description": "Last 4 digits of account number"
          },
          "name": {
            "type": "string",
            "description": "Name of Bank"
          }
        }
      },
      "Card": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for card"
          },
          "name": {
            "type": "string",
            "description": "Name of the card"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Card creation timestamp"
          },
          "card_number": {
            "type": "string",
            "description": "Last 4 digits of card number"
          },
          "default": {
            "type": "boolean",
            "description": "Indicates the default card"
          }
        }
      },
      "VirtualCreditCard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for VCC"
          },
          "name": {
            "type": "string",
            "description": "Name of the VCC"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "VCC creation timestamp"
          },
          "card_number": {
            "type": "string",
            "description": "Last 4 digits of VCC"
          },
          "expiration_date": {
            "type": "string",
            "format": "date",
            "description": "VCC expiration date"
          },
          "default": {
            "type": "boolean",
            "description": "Indicates the default VCC"
          },
          "balance": {
            "type": "number",
            "format": "float",
            "description": "Indicates the current amount left on the virtual credit card"
          }
        }
      },
      "VirtualCreditCardCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for VCC"
          },
          "card_number": {
            "type": "string",
            "description": "Card number"
          },
          "expiration_date": {
            "type": "string",
            "format": "date",
            "description": "VCC expiration date"
          },
          "cvv": {
            "type": "string",
            "description": "CVV code"
          }
        }
      },
      "VirtualCreditCardTransaction": {
        "type": "object",
        "properties": {
          "created_ts": {
            "type": "string",
            "format": "date",
            "description": "Transaction timestamp"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Transaction number"
          },
          "description": {
            "type": "string",
            "description": "Transaction description"
          }
        }
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for user"
          },
          "user_id": {
            "type": "string",
            "description": "Specific user_id provided by the marketplace owner"
          },
          "key": {
            "type": "string",
            "description": "Publishable key of the user"
          },
          "secret": {
            "type": "string",
            "description": "Secret key of the user"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for user"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "User creation timestamp"
          },
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "user_id": {
            "type": "string",
            "description": "Specific user_id provided by the marketplace owner"
          },
          "publishable_key": {
            "type": "string",
            "description": "Publishable key of the user"
          },
          "secret_key": {
            "type": "string",
            "description": "Redacted secret key of the user"
          }
        }
      },
      "UserRequestInfo": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string",
                "description": "User first name",
                "default": "John"
              },
              "last_name": {
                "type": "string",
                "description": "User last name",
                "default": "Smith"
              },
              "business_name": {
                "type": "string",
                "description": "Business name",
                "default": "Widgets Inc."
              },
              "password": {
                "type": "string",
                "description": "User password"
              },
              "phone": {
                "type": "string",
                "description": "Phone number"
              },
              "dob": {
                "type": "string",
                "description": "User's date of birth (yyyy-mm-dd)",
                "default": "1980-01-01"
              },
              "ssn": {
                "type": "string",
                "description": "Social Security Number",
                "default": "00000000"
              },
              "check_number": {
                "type": "integer",
                "description": "Number to be used for the next check",
                "default": 1001
              },
              "invoice_number": {
                "type": "integer",
                "description": "Number to be used for the next invoice",
                "default": 5001
              },
              "entity_type": {
                "type": "string",
                "description": "One of a standard set of values that indicate the Entity formation type"
              },
              "industry_type": {
                "type": "string",
                "description": "One of a standard set of values that indicate the Business industry type"
              },
              "document": {
                "type": "string",
                "description": "One of a standard set of values that indicate the Identity Document Type"
              },
              "number": {
                "type": "string",
                "description": "Document Number. Minimum 5 characters and no special characters are allowed"
              },
              "issuer": {
                "type": "string",
                "description": "Issuer of the Document"
              },
              "issue_date": {
                "type": "string",
                "description": "String based on ISO-8601 for specifying the date of issuance for the document. YYYY-MM-DD"
              },
              "expiration_date": {
                "type": "string",
                "description": "String based on ISO-8601 for specifying the date of expiration for the document. YYYY-MM-DD"
              },
              "business_operation": {
                "type": "string",
                "description": "One of a standard set of values that indicate the Business Entity's Operations in the USA."
              },
              "origin_country": {
                "type": "string",
                "description": "3-character country code following the ISO_3166-1 standards. (Ex. USA)"
              },
              "origin_state": {
                "type": "string",
                "description": "State / Province. Use state codes for USA, CANADA, MEXICO and SPAIN. For other countries it's free text up to 25 alphanumeric characters. Use the USPS for USA States."
              },
              "origin_date": {
                "type": "string",
                "description": "String based on ISO-8601 for specifying the origin date of the entity. YYYY-MM-DD"
              }
            }
          },
          "merchant": {
            "type": "object",
            "properties": {
              "website": {
                "type": "string",
                "description": "Company website",
                "default": "http://www.example.com"
              },
              "tax_id": {
                "type": "string",
                "description": "Company",
                "default": "00000000"
              },
              "industry": {
                "type": "string",
                "description": "Industry sector"
              },
              "legal_firstname": {
                "type": "string",
                "description": "Principal officer first name",
                "default": "John"
              },
              "legal_lastname": {
                "type": "string",
                "description": "Principal officer last name",
                "default": "Smith"
              },
              "incorporation_date": {
                "type": "string",
                "description": "Business incorporation or formation date (yyyy-mm-dd)",
                "default": "1980-01-01"
              },
              "address": {
                "type": "object",
                "required": [
                  "line_1",
                  "city",
                  "state",
                  "zip"
                ],
                "properties": {
                  "line_1": {
                    "type": "string",
                    "description": "Street line 1",
                    "default": "1234 N. 1st Street"
                  },
                  "line_2": {
                    "type": "string",
                    "description": "Street line 2",
                    "default": "n°56"
                  },
                  "city": {
                    "type": "string",
                    "description": "City",
                    "default": "San Francisco"
                  },
                  "state": {
                    "type": "string",
                    "description": "State",
                    "default": "CA"
                  },
                  "zip": {
                    "type": "string",
                    "description": "Zip/postal code",
                    "default": "12345"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country",
                    "default": "US"
                  }
                },
                "description": "Company address"
              },
              "principal_address": {
                "type": "object",
                "required": [
                  "line_1",
                  "city",
                  "state",
                  "zip"
                ],
                "properties": {
                  "line_1": {
                    "type": "string",
                    "description": "Street line 1",
                    "default": "1234 N. 1st Street"
                  },
                  "line_2": {
                    "type": "string",
                    "description": "Street line 2",
                    "default": "n°56"
                  },
                  "city": {
                    "type": "string",
                    "description": "City",
                    "default": "San Francisco"
                  },
                  "state": {
                    "type": "string",
                    "description": "State",
                    "default": "CA"
                  },
                  "zip": {
                    "type": "string",
                    "description": "Zip/postal code",
                    "default": "12345"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country",
                    "default": "US"
                  }
                },
                "description": "Principal officer address"
              },
              "principal_citizenship_status": {
                "type": "string",
                "description": "One of a standard set of values that indicate the citizenship status (us_citizen, resident, non_resident)",
                "default": "us_citizen"
              },
              "principal_occupation": {
                "type": "string",
                "description": "One of a standard set of values that indicate customer occupation"
              }
            }
          },
          "brand": {
            "type": "object",
            "properties": {
              "check": {
                "type": "object",
                "properties": {
                  "logo": {
                    "type": "string",
                    "description": "Base64 encoded company logo",
                    "default": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
                  },
                  "color": {
                    "type": "object",
                    "properties": {
                      "primary": {
                        "type": "string",
                        "description": "Primary color scheme",
                        "default": "#000000"
                      },
                      "secondary": {
                        "type": "string",
                        "description": "Secondary color scheme",
                        "default": "#ffffff"
                      }
                    }
                  }
                }
              },
              "button": {
                "type": "object",
                "properties": {
                  "color": {
                    "type": "object",
                    "properties": {
                      "primary": {
                        "type": "string",
                        "description": "Primary color scheme",
                        "default": "#000000"
                      },
                      "secondary": {
                        "type": "string",
                        "description": "Secondary color scheme",
                        "default": "#ffffff"
                      }
                    }
                  }
                }
              },
              "logo": {
                "type": "string",
                "description": "Base64 encoded company logo",
                "default": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
              },
              "reply_to": {
                "type": "string",
                "writeOnly": true,
                "description": "Email reply to address",
                "default": "jsmith@example.com"
              },
              "footer": {
                "type": "string",
                "description": "Email footer",
                "default": "Test email footer"
              },
              "slogan": {
                "type": "string",
                "description": "Email slogan",
                "default": "Test email slogan"
              }
            }
          },
          "developer": {
            "type": "object",
            "properties": {
              "webhook_uri": {
                "type": "string",
                "description": "Webhook URI (max length 256)",
                "maxLength": 256
              }
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "expiration": {
                "type": "number",
                "format": "integer",
                "minimum": 10,
                "maximum": 720,
                "description": "Payment expiration"
              }
            }
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string",
                "description": "User first name",
                "default": "John"
              },
              "last_name": {
                "type": "string",
                "description": "User last name",
                "default": "Smith"
              },
              "business_name": {
                "type": "string",
                "description": "Business name",
                "default": "Widgets Inc."
              },
              "password": {
                "type": "string",
                "description": "User password"
              },
              "phone": {
                "type": "string",
                "description": "Phone number"
              },
              "dob": {
                "type": "string",
                "description": "User's date of birth (yyyy-mm-dd)",
                "default": "1980-01-01"
              },
              "ssn": {
                "type": "string",
                "description": "Social Security Number",
                "default": "00000000"
              },
              "check_number": {
                "type": "integer",
                "description": "Number to be used for the next check",
                "default": 1001
              },
              "invoice_number": {
                "type": "integer",
                "description": "Number to be used for the next invoice",
                "default": 5001
              },
              "entity_type": {
                "type": "string",
                "description": "One of a standard set of values that indicate the Entity formation type"
              },
              "industry_type": {
                "type": "string",
                "description": "One of a standard set of values that indicate the Business industry type"
              },
              "document": {
                "type": "string",
                "description": "One of a standard set of values that indicate the Identity Document Type"
              },
              "number": {
                "type": "string",
                "description": "Document Number. Minimum 5 characters and no special characters are allowed"
              },
              "issuer": {
                "type": "string",
                "description": "Issuer of the Document"
              },
              "issue_date": {
                "type": "string",
                "description": "String based on ISO-8601 for specifying the date of issuance for the document. YYYY-MM-DD"
              },
              "expiration_date": {
                "type": "string",
                "description": "String based on ISO-8601 for specifying the date of expiration for the document. YYYY-MM-DD"
              },
              "business_operation": {
                "type": "string",
                "description": "One of a standard set of values that indicate the Business Entity's Operations in the USA."
              },
              "origin_country": {
                "type": "string",
                "description": "3-character country code following the ISO_3166-1 standards. (Ex. USA)"
              },
              "origin_state": {
                "type": "string",
                "description": "State / Province. Use state codes for USA, CANADA, MEXICO and SPAIN. For other countries it's free text up to 25 alphanumeric characters. Use the USPS for USA States."
              },
              "origin_date": {
                "type": "string",
                "description": "String based on ISO-8601 for specifying the origin date of the entity. YYYY-MM-DD"
              }
            }
          },
          "merchant": {
            "type": "object",
            "properties": {
              "website": {
                "type": "string",
                "description": "Company website",
                "default": "http://www.example.com"
              },
              "tax_id": {
                "type": "string",
                "description": "Company",
                "default": "00000000"
              },
              "industry": {
                "type": "string",
                "description": "Industry sector"
              },
              "legal_firstname": {
                "type": "string",
                "description": "Principal officer first name",
                "default": "John"
              },
              "legal_lastname": {
                "type": "string",
                "description": "Principal officer last name",
                "default": "Smith"
              },
              "incorporation_date": {
                "type": "string",
                "description": "Business incorporation or formation date (yyyy-mm-dd)",
                "default": "1980-01-01"
              },
              "address": {
                "type": "object",
                "required": [
                  "line_1",
                  "city",
                  "state",
                  "zip"
                ],
                "properties": {
                  "line_1": {
                    "type": "string",
                    "description": "Street line 1",
                    "default": "1234 N. 1st Street"
                  },
                  "line_2": {
                    "type": "string",
                    "description": "Street line 2",
                    "default": "n°56"
                  },
                  "city": {
                    "type": "string",
                    "description": "City",
                    "default": "San Francisco"
                  },
                  "state": {
                    "type": "string",
                    "description": "State",
                    "default": "CA"
                  },
                  "zip": {
                    "type": "string",
                    "description": "Zip/postal code",
                    "default": "12345"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country",
                    "default": "US"
                  }
                },
                "description": "Company address"
              },
              "principal_address": {
                "type": "object",
                "required": [
                  "line_1",
                  "city",
                  "state",
                  "zip"
                ],
                "properties": {
                  "line_1": {
                    "type": "string",
                    "description": "Street line 1",
                    "default": "1234 N. 1st Street"
                  },
                  "line_2": {
                    "type": "string",
                    "description": "Street line 2",
                    "default": "n°56"
                  },
                  "city": {
                    "type": "string",
                    "description": "City",
                    "default": "San Francisco"
                  },
                  "state": {
                    "type": "string",
                    "description": "State",
                    "default": "CA"
                  },
                  "zip": {
                    "type": "string",
                    "description": "Zip/postal code",
                    "default": "12345"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country",
                    "default": "US"
                  }
                },
                "description": "Principal officer address"
              },
              "principal_citizenship_status": {
                "type": "string",
                "description": "One of a standard set of values that indicate the citizenship status (us_citizen, resident, non_resident)",
                "default": "us_citizen"
              },
              "principal_occupation": {
                "type": "string",
                "description": "One of a standard set of values that indicate customer occupation"
              }
            }
          },
          "brand": {
            "type": "object",
            "properties": {
              "check": {
                "type": "object",
                "properties": {
                  "logo": {
                    "type": "string",
                    "description": "Base64 encoded company logo",
                    "default": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
                  },
                  "color": {
                    "type": "object",
                    "properties": {
                      "primary": {
                        "type": "string",
                        "description": "Primary color scheme",
                        "default": "#000000"
                      },
                      "secondary": {
                        "type": "string",
                        "description": "Secondary color scheme",
                        "default": "#ffffff"
                      }
                    }
                  }
                }
              },
              "button": {
                "type": "object",
                "properties": {
                  "color": {
                    "type": "object",
                    "properties": {
                      "primary": {
                        "type": "string",
                        "description": "Primary color scheme",
                        "default": "#000000"
                      },
                      "secondary": {
                        "type": "string",
                        "description": "Secondary color scheme",
                        "default": "#ffffff"
                      }
                    }
                  }
                }
              },
              "logo": {
                "type": "string",
                "description": "Base64 encoded company logo",
                "default": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
              },
              "reply_to": {
                "type": "string",
                "writeOnly": true,
                "description": "Email reply to address",
                "default": "jsmith@example.com"
              },
              "footer": {
                "type": "string",
                "description": "Email footer",
                "default": "Test email footer"
              },
              "slogan": {
                "type": "string",
                "description": "Email slogan",
                "default": "Test email slogan"
              }
            }
          },
          "bank": {
            "type": "object",
            "writeOnly": true,
            "properties": {
              "default": {
                "type": "string",
                "description": "Default bank account id (if user has multiple bank accounts)"
              },
              "billing": {
                "type": "string",
                "description": "Billing bank account id (if user has multiple bank accounts)"
              }
            }
          }
        }
      },
      "Button": {
        "type": "object",
        "properties": {
          "primary": {
            "type": "string",
            "description": "Primary color scheme",
            "default": "#000000"
          },
          "secondary": {
            "type": "string",
            "description": "Secondary color scheme",
            "default": "#ffffff"
          }
        }
      },
      "Color": {
        "type": "object",
        "properties": {
          "primary": {
            "type": "string",
            "description": "Primary color scheme",
            "default": "#000000"
          },
          "secondary": {
            "type": "string",
            "description": "Secondary color scheme",
            "default": "#ffffff"
          }
        }
      },
      "Institution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for institution"
          },
          "name": {
            "type": "string",
            "format": "uuid",
            "description": "Institution name"
          },
          "login_form": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "recipient"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "enum": [
                    "username",
                    "passcode",
                    "password"
                  ],
                  "description": "Field name"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "TEXT",
                    "PASSWORD"
                  ],
                  "description": "Field type"
                },
                "description": {
                  "type": "string",
                  "description": "Field description"
                }
              }
            },
            "minItems": 2,
            "maxItems": 3,
            "description": "Fields for the login form"
          }
        }
      }
    },
    "responses": {
      "EmptyResponse": {
        "description": "Returns an empty JSON object",
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad request (Your request is invalid)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "more_info": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized (Your API key is wrong)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden (You do not have permission to access the requested endpoint)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found (The specified resource was not found)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "MethodNotAllowed": {
        "description": "Method Not Allowed (You tried to access an endpoint with an invalid method)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests (You’re sending too many requests! Slow down!)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error (We had a problem with our server. Try again later.)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable (We’re temporarily offline for maintenance. Please try again later.)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "queryParam": {
        "name": "q",
        "in": "query",
        "description": "Search query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "pageParam": {
        "name": "page",
        "in": "query",
        "description": "Page number",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "perPageParam": {
        "name": "per_page",
        "in": "query",
        "description": "Number of results per page (10, 25, 50)",
        "required": false,
        "schema": {
          "type": "integer",
          "enum": [
            10,
            25,
            50
          ]
        }
      },
      "startDateParam": {
        "name": "start_date",
        "in": "query",
        "description": "Start date (yyyy-mm-dd)",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "endDateParam": {
        "name": "end_date",
        "in": "query",
        "description": "End date (yyyy-mm-dd)",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "directionParam": {
        "name": "direction",
        "in": "query",
        "description": "Direction",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "INCOMING",
            "OUTGOING"
          ]
        }
      },
      "sortParam": {
        "name": "sort",
        "in": "query",
        "description": "Sort order",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "+NUMBER",
            "-NUMBER",
            "+TYPE",
            "-TYPE",
            "+AMOUNT",
            "-AMOUNT",
            "+STATUS",
            "-STATUS",
            "+DATE",
            "-DATE",
            "+UPDATE",
            "-UPDATE",
            "+DESCRIPTION",
            "-DESCRIPTION"
          ]
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}