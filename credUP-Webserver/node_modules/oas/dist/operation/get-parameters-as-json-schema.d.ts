import type Operation from '../operation';
import type { OASDocument, SchemaObject } from '../rmoas.types';
export interface SchemaWrapper {
    $schema?: string;
    type: string;
    label?: string;
    schema: SchemaObject;
    description?: string;
    deprecatedProps?: SchemaWrapper;
}
/**
 * The order of this object determines how they will be sorted in the compiled JSON Schema
 * representation.
 *
 * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#parameterObject}
 * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#parameterObject}
 */
export declare const types: Record<keyof OASDocument, string>;
export default function getParametersAsJSONSchema(operation: Operation, api: OASDocument, opts?: {
    globalDefaults?: Record<string, unknown>;
    includeDiscriminatorMappingRefs?: boolean;
    mergeIntoBodyAndMetadata?: boolean;
    retainDeprecatedProperties?: boolean;
    transformer?: (schema: SchemaObject) => SchemaObject;
}): SchemaWrapper[];
